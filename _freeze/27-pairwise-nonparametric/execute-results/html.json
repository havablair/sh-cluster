{
  "hash": "419eb3cc3627bd510e699896e0186e86",
  "result": {
    "markdown": "# (non-parametric) PCA Cluster pairwise comparisons\n\n## Overview\n\nCreating a page for non-parametric pairwise comparisons, because my assessment of the validation data is that we are violating the homogeneity of variance assumption, which we would normally require before doing ANOVA + Tukey's HSD to test differences between groups.\n\n\n::: {.cell}\n\n:::\n\n\n## Validation points per cluster\n\nHere I am illustrating how many independent validation points we have for each cluster assignment, for the different model options from k = 4, 6, 8.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nNote that clusters with only 1 member won't be included in pairwise comparison b/c not possible to calculate variance with only 1 member...\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Soil properties for pairwise comparisons\n\nBecause our validation data points are coming from different projects / datasets, we don't have exactly the same variables from each project.\nThis is a reminder of which variables exist in the three sources we used for validation points:\n\n-   KSSL : clay, bulk density, lep, awc, ec, cec, pH, carbonates, organic matter, (est org C)\n-   CIG: clay, bulk density, pH, carbonates, organic matter, (est org C)\n-   SHI: clay, bulk density, pH, organic matter\n\nIn summary: all three datasets include bulk density, pH, organic matter, and clay, and KSSL and CIG include carbonates.\nSo I think it makes sense to focus on plotting and doing pairwise comparisons with these variables specifically\n\n## Example pairwise: OM, k=6\n\nWorking out the steps I need to include in a function to do the pairwise comparisons.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# test case k=6 version and organic matter\n\ntest_dat <- val_dat %>% \n  select(val_unit_id, k_6, om_loi, claytotal, source) %>% \n  drop_na(om_loi)\n\n# note only 1 observation for clust_1, need to drop it\n# b/c can't calculate variance for the pairwise comparison w/ only 1 obs.\ntest_dat %>% count(k_6)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"k_6\"],\"name\":[1],\"type\":[\"glue\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"clust_1\",\"2\":\"1\"},{\"1\":\"clust_2\",\"2\":\"28\"},{\"1\":\"clust_3\",\"2\":\"52\"},{\"1\":\"clust_4\",\"2\":\"26\"},{\"1\":\"clust_5\",\"2\":\"16\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ntest_dat_mult <- test_dat %>% filter(k_6 != \"clust_1\")\n\n# plot to see distributions \ntest_dat_mult %>% \n  ggplot(aes(x = k_6, y = om_loi)) + \n  geom_boxplot() + \n  geom_point() + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntest_lm <- lm(formula = om_loi ~ k_6,\n   data = test_dat_mult)\n\n# look at some diagnostic plots for our model \n# note homogeneity of variance looks sketchy\nperformance::check_model(test_lm, check = c(\"normality\", \"homogeneity\", \"linearity\")) \n```\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# runs Bartlett Test for homogeneity of variance\nperformance::check_homogeneity(test_lm) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Variances differ between groups (Bartlett Test, p = 0.000).\n```\n:::\n:::\n\n\nThis shows how I would do a Kruskal-Wallis test followed by pairwise comparisons with Dunn's test, based on this blog post [\"Kruskal-Wallis Test in R\"](https://www.datanovia.com/en/lessons/kruskal-wallis-test-in-r/)\n\nNote that the p-value adjustment method here is Holm, but there are other options (Bonferroni, Benjamani-Hochberg, etc.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_dat_mult %>% \n  kruskal_test(om_loi ~ k_6)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\".y.\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"df\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"p\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"method\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"om_loi\",\"2\":\"122\",\"3\":\"11.17377\",\"4\":\"3\",\"5\":\"0.0108\",\"6\":\"Kruskal-Wallis\",\"_rn_\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# calculate eta-squared based on the H-statistic multiply by 100 for % variance\n# in dependent variable (OM) explained by the independent variable (clusters)\ntest_dat_mult %>% \n  kruskal_effsize(om_loi ~ k_6)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\".y.\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"effsize\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"method\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"magnitude\"],\"name\":[5],\"type\":[\"ord\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"om_loi\",\"2\":\"122\",\"3\":\"0.06926928\",\"4\":\"eta2[H]\",\"5\":\"moderate\",\"_rn_\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# pairwise comps w/ Dunn's test \ntest_pairs <- test_dat_mult %>%\n  dunn_test(formula = as.formula(\"om_loi ~ k_6\"), p.adjust.method = \"holm\") %>% \n# originally tried formatting the \"comparison\" column \n  # as in biostat::cld documentation, but the \"=0\" part\n  # was messing up the cld labels. \n  mutate(comparison = glue(\"{group1}-{group2}\"))\n\n\nbiostat::make_cld(p.adj ~ comparison, data = test_pairs)  \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"group\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"cld\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"spaced_cld\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"clust_2\",\"2\":\"a\",\"3\":\"a_\",\"_rn_\":\"1\"},{\"1\":\"clust_3\",\"2\":\"b\",\"3\":\"_b\",\"_rn_\":\"2\"},{\"1\":\"clust_4\",\"2\":\"ab\",\"3\":\"ab\",\"_rn_\":\"3\"},{\"1\":\"clust_5\",\"2\":\"ab\",\"3\":\"ab\",\"_rn_\":\"4\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Function to plot model checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# working with these variables for the model checks\n# independent:  k= 4, 6, 8\n# dependent:  vars = om_loi, dbthirdbar,  ph1to1h2o, caco3, claytotal\n\ncheck_plots_anova <- function(soil_var, k_opt, df, log_trans_adj = FALSE) {\n  \n  dat_no_na <- df %>%\n    select(val_unit_id,\n           all_of(k_opt),\n           all_of(soil_var)) %>%\n    drop_na(all_of(soil_var))\n  \n  # checking if any clusters are represented by 1 or less data points. Want to drop these\n  \n  n_obs_per_cluster <- dat_no_na %>%\n    count(.data[[k_opt]])\n  \n  single_obs_clusters <- n_obs_per_cluster %>%\n    filter(n <= 1) %>%\n    pull(.data[[k_opt]])\n  \n  if (length(single_obs_clusters) == 0) {\n    dat_subset <- dat_no_na\n    \n  } else{\n    dat_subset <- dat_no_na %>%\n      filter(!(.data[[k_opt]] %in% single_obs_clusters))\n    \n  }\n  \n  if(log_trans_adj){\n    \n    # note this is for CaCO3, need to add 1 to avoid\n    # zero values\n    f <- paste0(\"log10(\", soil_var, \"+1)~\", k_opt)\n    \n  }else{\n    \n    f <- paste0(soil_var, \" ~ \", k_opt)\n    \n  }\n  \n  mod <- lm(formula = f,\n            data = dat_subset)\n  \n  check_plots <- performance::check_model(mod, check = c(\"normality\", \"homogeneity\", \"linearity\"))  \n  \n  return(list(var = glue(\"{soil_var}\"),\n              plots = check_plots))\n  \n}\n```\n:::\n\n\n## k=4 model checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"claytotal\",\n                  k_opt = \"k_4\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nclaytotal\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"ph1to1h2o\",\n                  k_opt = \"k_4\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nph1to1h2o\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"dbthirdbar\",\n                  k_opt = \"k_4\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ndbthirdbar\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"om_loi\",\n                  k_opt = \"k_4\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nom_loi\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-7-4.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"caco3\",\n                  k_opt = \"k_4\", \n                  df = val_dat,\n                  log_trans_adj = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ncaco3\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-7-5.png){width=672}\n:::\n:::\n\n\n## k=6 model checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"claytotal\",\n                  k_opt = \"k_6\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nclaytotal\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"ph1to1h2o\",\n                  k_opt = \"k_6\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nph1to1h2o\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"dbthirdbar\",\n                  k_opt = \"k_6\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ndbthirdbar\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"om_loi\",\n                  k_opt = \"k_6\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nom_loi\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-8-4.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"caco3\",\n                  k_opt = \"k_6\", \n                  df = val_dat,\n                  log_trans_adj = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ncaco3\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-8-5.png){width=672}\n:::\n:::\n\n\n## k=8 model checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"claytotal\",\n                  k_opt = \"k_8\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nclaytotal\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"ph1to1h2o\",\n                  k_opt = \"k_8\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nph1to1h2o\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"dbthirdbar\",\n                  k_opt = \"k_8\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ndbthirdbar\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"om_loi\",\n                  k_opt = \"k_8\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nom_loi\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-9-4.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"caco3\",\n                  k_opt = \"k_8\", \n                  df = val_dat, \n                  log_trans_adj = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ncaco3\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-9-5.png){width=672}\n:::\n:::\n\n\n## Function for testing homogeneity of variance\n\nHere I'm running the [Levene Test for Equality of Variances](https://www.itl.nist.gov/div898/handbook/eda/section3/eda35a.htm) as a way to check the homogeneity of variance assumption required for ANOVA.\nIf our k groups fail this test, would be better to do Kruskal-Wallis followed by Dunn's test for pairwise comparisons instead of ANOVA followed by Tukey's HSD.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevene_test_clusts <- function(soil_var, k_opt, df) {\n  \n  ### prep data \n  \n  dat_no_na <- df %>%\n    select(val_unit_id,\n           all_of(k_opt),\n           all_of(soil_var)) %>%\n    drop_na(all_of(soil_var)) \n  \n  # can't do pairwise t-tests with only 1 obs in a\n  # group (b/c need variance calc), so want to filter those out\n\n  n_obs_per_cluster <- dat_no_na %>%\n    count(.data[[k_opt]])\n\n  single_obs_clusters <- n_obs_per_cluster %>%\n    filter(n <= 1) %>%\n    pull(.data[[k_opt]])\n\n  if(length(single_obs_clusters) == 0){\n\n    dat_subset <- dat_no_na\n\n  }else{\n\n    dat_subset <- dat_no_na %>%\n      filter(!(.data[[k_opt]] %in% single_obs_clusters))\n\n  }\n  \n  # gets rid of warning from levene_test about factor coercion\n  dat_subset$k_opt_factor <- as.factor(dat_subset %>% pull(k_opt))\n  \n  ### perform levene test\n\n  lev_df <- levene_test(data = dat_subset,\n                        formula = as.formula(paste0(soil_var, \" ~ \", \"k_opt_factor\")), center = median) %>% \n    mutate(var = soil_var, \n           k = k_opt)\n\n  return(lev_df)\n\n}\n```\n:::\n\n\n## Run Levene tests\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# example of what levene test function returns: \nlevene_test_clusts(soil_var = \"ph1to1h2o\",\n                       k_opt = \"k_8\",\n                       df = val_dat)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"df1\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"df2\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"var\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"k\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"6\",\"2\":\"133\",\"3\":\"6.75171\",\"4\":\"2.908127e-06\",\"5\":\"ph1to1h2o\",\"6\":\"k_8\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# dependent vars\nvar_names <- c(\"claytotal\", \"ph1to1h2o\", \"om_loi\", \"caco3\", \"dbthirdbar\")\n\n# independent vars all possible values of k (number of clusters)\ncluster_opts <- as.character(glue(\"k_{c(4, 5, 6, 7, 8, 9, 10, 11)}\"))\n\n# create df with all combinations of var_names x clusters\nmod_template <- tidyr::crossing(var_names, cluster_opts)\n\n\nph <- map(.x = cluster_opts, \n    .f = ~levene_test_clusts(soil_var = \"ph1to1h2o\",\n                             k_opt = .x, \n                             df = val_dat)) %>% \n  list_rbind()\n\nclay <- map(.x = cluster_opts, \n    .f = ~levene_test_clusts(soil_var = \"claytotal\",\n                             k_opt = .x, \n                             df = val_dat)) %>% \n  list_rbind()\n\nom <- map(.x = cluster_opts, \n    .f = ~levene_test_clusts(soil_var = \"om_loi\",\n                             k_opt = .x, \n                             df = val_dat)) %>% \n  list_rbind()\n\ncarbs <- map(.x = cluster_opts, \n    .f = ~levene_test_clusts(soil_var = \"caco3\",\n                             k_opt = .x, \n                             df = val_dat)) %>% \n  list_rbind()\n\nbd <- map(.x = cluster_opts, \n    .f = ~levene_test_clusts(soil_var = \"dbthirdbar\",\n                             k_opt = .x, \n                             df = val_dat)) %>% \n  list_rbind()\n\nlev_tests <- reduce(.x = list(ph, clay, om, carbs, bd),\n                    .f = bind_rows)\n```\n:::\n\n\n## Check Levene Tests\n\nOnly bulk density passes the homogeneity of variance assumption, and it does so consistently for all values of k.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlev_tests %>% \n  filter(p>0.05)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"df1\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"df2\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"statistic\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"var\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"k\"],\"name\":[6],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"3\",\"2\":\"125\",\"3\":\"1.0593251\",\"4\":\"0.36896373\",\"5\":\"dbthirdbar\",\"6\":\"k_4\"},{\"1\":\"4\",\"2\":\"124\",\"3\":\"0.7674733\",\"4\":\"0.54836279\",\"5\":\"dbthirdbar\",\"6\":\"k_5\"},{\"1\":\"4\",\"2\":\"124\",\"3\":\"1.2233986\",\"4\":\"0.30433510\",\"5\":\"dbthirdbar\",\"6\":\"k_6\"},{\"1\":\"5\",\"2\":\"123\",\"3\":\"2.1445593\",\"4\":\"0.06454443\",\"5\":\"dbthirdbar\",\"6\":\"k_7\"},{\"1\":\"6\",\"2\":\"122\",\"3\":\"1.3692772\",\"4\":\"0.23231561\",\"5\":\"dbthirdbar\",\"6\":\"k_8\"},{\"1\":\"6\",\"2\":\"121\",\"3\":\"1.5303373\",\"4\":\"0.17386410\",\"5\":\"dbthirdbar\",\"6\":\"k_9\"},{\"1\":\"7\",\"2\":\"120\",\"3\":\"1.6345408\",\"4\":\"0.13207316\",\"5\":\"dbthirdbar\",\"6\":\"k_10\"},{\"1\":\"7\",\"2\":\"119\",\"3\":\"1.2130747\",\"4\":\"0.30089534\",\"5\":\"dbthirdbar\",\"6\":\"k_11\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Function for non-parametric pairwise comparisons\n\nArguments: soil property and k option (model version / number of clusters) and validation dataframe.\n\nReturns: all pairwise comparisons in a dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_clust_pairwise <- function(soil_var, k_opt, df) {\n  \n  ### prep data \n  \n  dat_no_na <- df %>%\n    select(val_unit_id,\n           all_of(k_opt),\n           all_of(soil_var)) %>%\n    drop_na(all_of(soil_var))\n  \n  # can't do pairwise t-tests with only 1 obs in a \n  # group, so need to filter those out \n  \n  n_obs_per_cluster <- dat_no_na %>%\n    count(.data[[k_opt]])\n  \n  single_obs_clusters <- n_obs_per_cluster %>% \n    filter(n <= 1) %>% \n    pull(.data[[k_opt]])\n  \n  if(length(single_obs_clusters) == 0){\n    \n    dat_subset <- dat_no_na\n    \n  }else{\n    \n    dat_subset <- dat_no_na %>% \n      filter(!(.data[[k_opt]] %in% single_obs_clusters))\n    \n  } \n  \n  ### perform pairwise comparison\n  \n  pairs_df <- dunn_test(data = dat_subset,\n                        formula = as.formula(paste0(soil_var, \" ~ \", k_opt)), p.adjust.method = \"holm\") %>% \n    mutate(comparison = glue(\"{group1} - {group2}\"))\n  \n  cld_df <- biostat::make_cld(p.adj ~ comparison, data = pairs_df)\n\n  ### results\n  \n  results_list <- list(pairs_df = pairs_df,\n                       cld = cld_df)\n\n  return(results_list)\n  \n}\n```\n:::\n\n\n## Example function output\n\nThis is what the pairwise function I wrote above returns:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nph_test <- compare_clust_pairwise(soil_var = \"ph1to1h2o\",\n                       k_opt = \"k_8\",\n                       df = val_dat) \n\nph_test\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$pairs_df\n# A tibble: 21 × 10\n   .y.       group1  group2     n1    n2 statistic        p   p.adj p.adj.signif\n   <chr>     <chr>   <chr>   <int> <int>     <dbl>    <dbl>   <dbl> <chr>       \n 1 ph1to1h2o clust_1 clust_2     5    47  -0.330   7.42e- 1 1   e+0 ns          \n 2 ph1to1h2o clust_1 clust_3     5     6  -0.00407 9.97e- 1 1   e+0 ns          \n 3 ph1to1h2o clust_1 clust_4     5     9   2.58    9.76e- 3 1.17e-1 ns          \n 4 ph1to1h2o clust_1 clust_5     5    34   1.47    1.41e- 1 8.49e-1 ns          \n 5 ph1to1h2o clust_1 clust_6     5    12   3.48    5.03e- 4 8.05e-3 **          \n 6 ph1to1h2o clust_1 clust_7     5    27   1.67    9.44e- 2 8.49e-1 ns          \n 7 ph1to1h2o clust_2 clust_3    47     6   0.352   7.25e- 1 1   e+0 ns          \n 8 ph1to1h2o clust_2 clust_4    47     9   4.39    1.15e- 5 2.29e-4 ***         \n 9 ph1to1h2o clust_2 clust_5    47    34   3.82    1.32e- 4 2.37e-3 **          \n10 ph1to1h2o clust_2 clust_6    47    12   6.21    5.45e-10 1.14e-8 ****        \n# ℹ 11 more rows\n# ℹ 1 more variable: comparison <glue>\n\n$cld\n    group cld spaced_cld\n1 clust_1  ab        ab_\n2 clust_2   a        a__\n3 clust_3  ab        ab_\n4 clust_4  bc        _bc\n5 clust_5   b        _b_\n6 clust_6   c        __c\n7 clust_7   b        _b_\n```\n:::\n\n```{.r .cell-code}\ncomps <- ph_test[[\"pairs_df\"]]\n\ncomps %>% \n  select(group1, group2, p.adj) %>% \n  filter(p.adj < 0.05) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"group1\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"group2\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"p.adj\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"clust_1\",\"2\":\"clust_6\",\"3\":\"8.046559e-03\"},{\"1\":\"clust_2\",\"2\":\"clust_4\",\"3\":\"2.291165e-04\"},{\"1\":\"clust_2\",\"2\":\"clust_5\",\"3\":\"2.368203e-03\"},{\"1\":\"clust_2\",\"2\":\"clust_6\",\"3\":\"1.144932e-08\"},{\"1\":\"clust_2\",\"2\":\"clust_7\",\"3\":\"1.129665e-03\"},{\"1\":\"clust_3\",\"2\":\"clust_6\",\"3\":\"3.539803e-03\"},{\"1\":\"clust_5\",\"2\":\"clust_6\",\"3\":\"9.611786e-03\"},{\"1\":\"clust_6\",\"2\":\"clust_7\",\"3\":\"3.899378e-02\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Run pairwise comparisons\n\nHere I create a dataframe to hold the results of the pairwise comparisons, then use `map2()` to iterate over the variables and cluster sizes, running all the tests.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# run the pairwise comparisons for each var and cluster size\ndiffs_df <- mod_template %>%\n  mutate(comps_all = map2(.x = var_names,\n                          .y = cluster_opts,\n                          .f = compare_clust_pairwise,\n                          df = val_dat))\n\n# unnest once to get the pairs_df and cld_df dfs \n# as their own columns\ndiffs_unnest <- diffs_df %>% \n  unnest(comps_all) %>% \n  mutate(obj_names = names(comps_all))\n\n# want to save pairs_df and cld_df dat separately, so filtering\n# and then unnesting again to get rectangular data \npairs_dat <- diffs_unnest %>% \n  filter(obj_names == \"pairs_df\") %>% \n  unnest(comps_all) %>% \n  select(-obj_names)\n\nwrite_csv(pairs_dat, \"data/pca_nonpara_pairwise_results_all.csv\")\n\ncld_dat <- diffs_unnest %>% \n  filter(obj_names == \"cld\") %>% \n  unnest(comps_all) %>% \n  select(-obj_names)\n\nwrite_csv(cld_dat, \"data/cld_display_non_para.csv\")\n```\n:::\n\n\nNow need to count how many of the tests have an adjusted p-value \\< 0.05.\nAll of the p-values are already adjusted with the Holm method (you can see this in the function definition for `compare_clust_pairwise()` )\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_sig_comps <- function(df){\n  \n  df %>% \n    filter(p.adj<0.05) %>% \n    nrow()\n  \n}\n\nsig_diffs_df <- pairs_dat %>%\n  select(cluster_opts, var_names, group1, group2, p.adj) %>% \n  group_by(cluster_opts, var_names) %>%\n  nest(data = c(group1, group2, p.adj)) %>%\n  mutate(n_sig_comps = map_int(data, count_sig_comps)) %>%\n  mutate(\n    num_regions = as.numeric(str_extract(cluster_opts, \"[:digit:]+\")),\n    possible_comps = (num_regions * (num_regions - 1)) / 2,\n    alpha_comps = round(possible_comps * 0.05, digits = 0)\n  ) %>%\n  select(var_names,\n         cluster_opts,\n         num_regions,\n         data,\n         n_sig_comps,\n         possible_comps,\n         alpha_comps)\n\nsig_diffs_summary <- sig_diffs_df %>% \n  select(var_names,\n         cluster_opts,\n         num_regions,\n         n_sig_comps,\n         possible_comps,\n         alpha_comps)\n\nwrite_csv(sig_diffs_summary, \"data/pca_nonpara_pairwise_comparisons_summary.csv\")\n```\n:::\n\n\n## Plot comparisons\n\n### All clusters\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nFor context, this plot shows a black line for the total number of **possible** contrasts.\nNote that because we are showing each soil property variable separately, the \"total possible\" line illustrates the total number of possible comparisons for a single variable\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nTwo other ways to contextualize the number of significant contrasts: 1) with a table, and 2) with a plot showing how the % significant contrasts (as a function of total possible) changes as the number of clusters goes up.\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"num_regions\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n_sig_comps\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"possible_comps\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"percent_sig\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"alpha_5perc\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4\",\"2\":\"21\",\"3\":\"30\",\"4\":\"70\",\"5\":\"2\"},{\"1\":\"5\",\"2\":\"22\",\"3\":\"50\",\"4\":\"44\",\"5\":\"2\"},{\"1\":\"6\",\"2\":\"22\",\"3\":\"75\",\"4\":\"29\",\"5\":\"4\"},{\"1\":\"7\",\"2\":\"29\",\"3\":\"105\",\"4\":\"28\",\"5\":\"5\"},{\"1\":\"8\",\"2\":\"37\",\"3\":\"140\",\"4\":\"26\",\"5\":\"7\"},{\"1\":\"9\",\"2\":\"35\",\"3\":\"180\",\"4\":\"19\",\"5\":\"9\"},{\"1\":\"10\",\"2\":\"41\",\"3\":\"225\",\"4\":\"18\",\"5\":\"11\"},{\"1\":\"11\",\"2\":\"43\",\"3\":\"275\",\"4\":\"16\",\"5\":\"14\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](27-pairwise-nonparametric_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "27-pairwise-nonparametric_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}