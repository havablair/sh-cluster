{
  "hash": "dc9918ddf7319c4450013366077f03e1",
  "result": {
    "markdown": "# MAP EC and LEP with `{terra}` {#sec-map}\n\n## Overview\n\nThis chapter serves two main purposes:\n\n-   visualize distributions of EC and LEP values, to help make a decision about how to deal with unlikely values (LEP = 0) or very low / agronomically unimportant values (EC between 0-1).\n-   Do a test run of the raster reclass process with `{terra}`\n\n## Load packages and data\n\nI'll be using the [`{terra}` package](https://rspatial.org/terra/pkg/index.html), which is for working with raster data.\nWhen I started this project, I created the initial AOI raster in QGIS and modified in ArcGIS, but am hoping to do more in R so it can be documented as part of this workflow.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\nlibrary(terra)\n\n# gssurgo raster, clipped to AOI and simple MUKEYs to reduce size\nr <- rast(\"data/gSSURGO_MN/MapunitRaster_10m_Clip1_and_Reclass/MapunitRaster_10m_Clip1_and_Reclass/Reclass_tif1.tif\")\n\n# allows us to translate our \"new\" (shorter) MUKEYs to the\n# originals that match up with the rest of the db\naoi_mu <- read.delim(\"data/gSSURGO_MN/mukey_new_crosswalk.txt\", sep = \",\") %>% \n  select(MUKEY, MUKEY_New, Count)\n```\n:::\n\n\nI created these keys for assigned EC category and LEP category in @sec-var-trans .\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# to make a thematic EC map\nec_cat <- read_csv(\"data/ec_category_mukey.csv\") %>%\n  full_join(., aoi_mu, by = c(\"mukey\" = \"MUKEY\")) %>% \n  mutate(ec_cat = case_when(\n    is.na(ec_cat) ~ 5,\n    TRUE ~ ec_cat\n  ))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 6912 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (3): mukey, ec_r_value, ec_cat\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nlep_cat <- read_csv(\"data/lep_category_mukey.csv\")%>% \n  full_join(., aoi_mu, by = c(\"mukey\" = \"MUKEY\")) %>% \n  mutate(lep_cat = case_when(\n    is.na(lep_cat) ~ 5,\n    TRUE ~ lep_cat\n  ))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 6912 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (3): mukey, lep_r_value, lep_cat\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## SpatRaster object\n\nLook at how our raster object appears in R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass       : SpatRaster \ndimensions  : 61033, 47668, 1  (nrow, ncol, nlyr)\nresolution  : 10, 10  (x, y)\nextent      : -91855, 384825, 2278555, 2888885  (xmin, xmax, ymin, ymax)\ncoord. ref. : NAD_1983_Albers \nsource      : Reclass_tif1.tif \nname        : Reclass_tif1 \nmin value   :            0 \nmax value   :         7861 \n```\n:::\n:::\n\n\n## Tables to re-classify cell values\n\nFirst, try making a thematic map with the EC categories I loaded above.\nWill use `terra::classify()` to assign new values to my raster cells.\nNeed to supply a two-column matrix for the reclass, with \"from\" (first column) and \"to\" (second column) values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 7999 is the missing data value\nec_mx <- ec_cat %>% \n  select(MUKEY_New, ec_cat) %>% \n  add_row(MUKEY_New = 7999, ec_cat = 5) %>% \n  as.matrix()\n```\n:::\n\n\nI'm going to do one for LEP too:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 7999 is the missing data value\nlep_mx <- lep_cat %>% \n  select(MUKEY_New, lep_cat) %>% \n  add_row(MUKEY_New = 7999, lep_cat = 5) %>% \n  as.matrix()\n```\n:::\n\n\n## Raster reclass process\n\n!! Note that I have set this chunk option `eval: false` to make sure this doesn't run again when I render the project (because it takes so long).\nIn my `_quarto.yml` I have the execute option `freeze: auto` set, which typically would mean that code is only re-run if I have changed the source.\nI want to avoid that behavior here, because I'm fiddling around with the source, but don't need this test to run again.\n\nAlso, it is important to supply the `filename` argument here to write the file.\nOtherwise, it will throw an error related to \"insufficient disk space\", because `terra` is trying to save the reclassed raster as a temp file.\nFor more info, read [this issue](https://github.com/rspatial/terra/issues/612) `terra`'s github repo.\n\nRecall that [1 byte = 8 bits = 2\\^8 (256) unique numbers](https://web.stanford.edu/class/cs101/bits-bytes.html), so the `datatype = \"INT2U\"` below means \"integer, 2 bytes, unsigned\".\nBack when I was dealing with the big raster size due to MUKEY values (see @sec-reclass ), I reclassed the raster in ArcGIS to allow us to use 16-bit encoding.\n16-bit would be 2 bytes so I think I should be able to stick with that for saving this EC raster.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n###### RECLASS for EC -------------------------------\n\n# this took a LONG time (50 minutes??)\n\nstart_reclass <- Sys.time()\n\nr_reclass <- classify(x = r,\n                      rcl = ec_mx, \n                      filename = \"E:/big-files-backup/ch03-sh-groups/ec_reclass.tif\",\n                      datatype = \"INT2U\", \n                      overwrite = TRUE)\n\nend_reclass <- Sys.time() \n\nstart_reclass - end_reclass\n\n###### RECLASS for LEP -------------------------------\n\nstart_reclass <- Sys.time()\n\nr_reclass <- classify(x = r,\n                      rcl = lep_mx, \n                      filename = \"E:/big-files-backup/ch03-sh-groups/lep_reclass.tif\",\n                      datatype = \"INT2U\", \n                      overwrite = TRUE)\n\nend_reclass <- Sys.time() \n\nstart_reclass - end_reclass\n```\n:::\n\n\n### A note about file size\n\nAfter I saved this new raster, I checked the file size and it came to 0.1070863 GB (not bad!).\nI'd like to figure out how to make it go faster (if possible), but right now that's not my first priority.\n\n## Visualize re-classed rasters\n\n### Read in .tifs\n\nReminder of what EC cell values mean:\n\n-   1: EC is 0\n-   2: EC is \\>0, but \\<1\n-   3: EC = 1\n-   4: EC \\> 1\n-   5: NA value (meaning we are not including that area)\n\nNote the min and max values here (1 and 5).\nThis means that I successfully reclassed all my raster values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nec_rast <- rast(\"E:/big-files-backup/ch03-sh-groups/ec_reclass.tif\")\n\nec_rast\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass       : SpatRaster \ndimensions  : 61033, 47668, 1  (nrow, ncol, nlyr)\nresolution  : 10, 10  (x, y)\nextent      : -91855, 384825, 2278555, 2888885  (xmin, xmax, ymin, ymax)\ncoord. ref. : NAD_1983_Albers \nsource      : ec_reclass.tif \nname        : Reclass_tif1 \nmin value   :            1 \nmax value   :            5 \n```\n:::\n:::\n\n\nReminder of what LEP cell values mean:\n\n-   0: LEP = 0\n-   1: Low LEP \\<3\n-   2: Moderate LEP \\>=3 & \\<6\n-   3: High LEP\\>= 6 & \\<9\n-   4: Very high LEP \\>= 9\n-   5: NA value (meaning we are not including that area)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlep_rast <- rast(\"E:/big-files-backup/ch03-sh-groups/lep_reclass.tif\")\n\nlep_rast\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass       : SpatRaster \ndimensions  : 61033, 47668, 1  (nrow, ncol, nlyr)\nresolution  : 10, 10  (x, y)\nextent      : -91855, 384825, 2278555, 2888885  (xmin, xmax, ymin, ymax)\ncoord. ref. : NAD_1983_Albers \nsource      : lep_reclass.tif \nname        : Reclass_tif1 \nmin value   :            0 \nmax value   :            5 \n```\n:::\n:::\n\n\n### Plot troubleshooting\n\nHad issues with getting the colors to work in this plot, [this gis.stackexchange thread](https://gis.stackexchange.com/questions/435011/plotting-a-categorical-terra-raster-with-a-colour-map) was helpful.\n\nI had to update my version of `terra`, I had 1.4.XX, the method for doing colors described at the link above requires 1.5.50 or higher.\n\nWhen I run this interactively, I get error messages (below), but the plot still appears.\nThis seems to be a known issue, potentially related to garbage collection.\nCan follow [this issue for more details](https://github.com/rspatial/terra/issues/30), last updated 2022-09-20 (very recent).\nThis is the error:\n\n`Error in x$.self$finalize() : attempt to apply non-function`\n\n### EC Plot {#sec-ec-map}\n\nNic and I explored these rasters in QGIS on 2022-09-19, and decided that anything with EC \\>0 but \\<1 should be set to 0.\nAs you can see on the plots below, there are some weird artefacts in SE Minnesota that are showing up with measured EC values, even though surrounding areas are all 0.\nBecause there are parts of NW Minnesota that also have EC values in this range, it's possible that this decision will create some weirdness in that part of the map.\nCheck this out in the final clustering outputs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmycols <- data.frame(values = c(1:5), cols = hcl.colors(5, palette = \"viridis\"))\n\ncoltab(ec_rast) <- mycols\n\nplot(ec_rast, col = mycols, plg=list(legend = c(\"EC=0\", \"EC>0 & <1\", \"EC=1\", \"EC>1\", \"Not Incl\")), main = \"EC Categories\")\n```\n\n::: {.cell-output-display}\n![](09-plot-ec-lep_files/figure-html/ec-plot-1.png){width=672}\n:::\n:::\n\n\nAnd a plot to highlight just the areas where EC will be set to zero:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlowec_col_only <- data.frame(values = c(1:5),\n                             cols = c(\"#4B0055\",\"#FDE333\", \"#4B0055\", \"#4B0055\", \"#4B0055\"))\n\nplot(ec_rast, col = lowec_col_only, plg=list(legend = c(\"EC=0\", \"EC>0 & <1\", \"EC=1\", \"EC>1\", \"Not Incl\")), main = \"EC values to set to 0\")\n```\n\n::: {.cell-output-display}\n![](09-plot-ec-lep_files/figure-html/ec-low-plot-1.png){width=672}\n:::\n:::\n\n\n### LEP Plot {#sec-lep-map}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlepcols <- data.frame(values = c(0:5), cols = hcl.colors(6, palette = \"Zissou 1\"))\n\ncoltab(lep_rast) <- lepcols\n\n\nplot(lep_rast, col = lepcols, plg=list(legend = c(\"LEP=0\", \"LEP<3\", \"LEP>=3 & <6\", \"LEP>=6 & <9\", \"LEP >=9\", \"Not incl\")), main = \"LEP Categories\")\n```\n\n::: {.cell-output-display}\n![](09-plot-ec-lep_files/figure-html/lep-plot-1.png){width=672}\n:::\n:::\n\n\nAnd a plot to highlight only the areas with LEP = 0, these will be set to 0.5 (the low end of the lowest category).\nWe made this decision because the LEP=0 areas are discontinuous across counties, and not very prevalent across the state.\nSuspect this is not a measured value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlepz_col_only <- data.frame(values = c(0:5),\n                             cols = c(\"#FDE333\",\"#4B0055\", \"#4B0055\", \"#4B0055\", \"#4B0055\", \"#4B0055\"))\n\nplot(lep_rast, col = lepz_col_only, plg=list(legend = c(\"LEP=0\", \"LEP<3\", \"LEP>=3 & <6\", \"LEP>=6 & <9\", \"LEP >=9\", \"Not incl\")), main = \"LEP values to set to 0.5\")\n```\n\n::: {.cell-output-display}\n![](09-plot-ec-lep_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "09-plot-ec-lep_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}