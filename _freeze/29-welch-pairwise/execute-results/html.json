{
  "hash": "19644e00da6c898c1df3b6ad5c3a50cb",
  "result": {
    "markdown": "# Welch ANOVA for PCA cluster pairwise comparisons\n\n## Overview\n\nDid some more reading on March 15, 2023 and decided a better way to deal with the issue of hetergeneous variance is to do Welch's ANOVA followed by Games-Howell pairwise comparisons.\n\nSee Lakens et al. (2019) \"Taking Parametric Assumptions Seriously: Arguments for the Use of Welch's F-test instead of the Classical F-test in One-Way ANOVA\" for more info on Welch's F-test.\n\nSee Sauder & Demars (2019) plus their supplemental material on OSF for more about the Games-Howell test\n\nIn R, Wech's ANOVA can be accomplished with `oneway.test(â€¦, var.equal = FALSE)` , or `{rstatix}` has a wrapper function `welch_anova_test()`.\n\nFor Games-Howell, `{rstatix}` has `games_howell_test()` [documentation here](https://search.r-project.org/CRAN/refmans/rstatix/html/games_howell_test.html).\n\nFrom the documentation (emphasis added):\n\n> Performs Games-Howell test, which is used to compare all possible combinations of group differences when the assumption of homogeneity of variances is violated.\n> This post hoc test provides confidence intervals for the differences between group means and shows whether the differences are statistically significant.\n>\n> The test is based on Welch's degrees of freedom correction and uses Tukey's studentized range distribution for computing the p-values.\n> The test compares the difference between each pair of means with **appropriate adjustment for the multiple testing**.\n> So there is **no need to apply additional p-value corrections**.\n\n\n::: {.cell}\n\n:::\n\n\n## Validation points per cluster\n\nHere I am illustrating how many independent validation points we have for each cluster assignment, for the different model options from k = 4, 6, 8.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\nNote that clusters with only 1 member won't be included in pairwise comparison b/c not possible to calculate variance with only 1 member...\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Soil properties for pairwise comparisons\n\nBecause our validation data points are coming from different projects / datasets, we don't have exactly the same variables from each project.\nThis is a reminder of which variables exist in the three sources we used for validation points:\n\n-   KSSL : clay, bulk density, lep, awc, ec, cec, pH, carbonates, organic matter, (est org C)\n-   CIG: clay, bulk density, pH, carbonates, organic matter, (est org C)\n-   SHI: clay, bulk density, pH, organic matter\n\nIn summary: all three datasets include bulk density, pH, organic matter, and clay, and KSSL and CIG include carbonates.\nSo I think it makes sense to focus on plotting and doing pairwise comparisons with these variables specifically\n\n## Example pairwise: OM, k=6\n\nWorking out the steps I need to include in a function to do the pairwise comparisons.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# test case k=6 version and organic matter\n\ntest_dat <- val_dat %>% \n  select(val_unit_id, k_6, om_loi, claytotal, source) %>% \n  drop_na(om_loi)\n\n# note only 1 observation for clust_1, need to drop it\n# b/c can't calculate variance for the pairwise comparison w/ only 1 obs.\ntest_dat %>% count(k_6)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"k_6\"],\"name\":[1],\"type\":[\"glue\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"clust_1\",\"2\":\"1\"},{\"1\":\"clust_2\",\"2\":\"28\"},{\"1\":\"clust_3\",\"2\":\"52\"},{\"1\":\"clust_4\",\"2\":\"26\"},{\"1\":\"clust_5\",\"2\":\"16\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ntest_dat_mult <- test_dat %>% filter(k_6 != \"clust_1\")\n\n# plot to see distributions \ntest_dat_mult %>% \n  ggplot(aes(x = k_6, y = om_loi)) + \n  geom_boxplot() + \n  geom_point() + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntest_lm <- lm(formula = om_loi ~ k_6,\n   data = test_dat_mult)\n\n# look at some diagnostic plots for our model \n# note homogeneity of variance looks sketchy\nperformance::check_model(test_lm, check = c(\"normality\", \"homogeneity\", \"linearity\")) \n```\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# runs Bartlett Test for homogeneity of variance\nperformance::check_homogeneity(test_lm) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Variances differ between groups (Bartlett Test, p = 0.000).\n```\n:::\n:::\n\n\nThis shows how I would do Games-Howell pairwise comparisons\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngh_om <- games_howell_test(formula = om_loi ~ k_6,\n                  data = test_dat_mult)\n\ngh_om\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\".y.\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"group1\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"group2\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"estimate\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"conf.low\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"conf.high\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.adj\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"p.adj.signif\"],\"name\":[8],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"om_loi\",\"2\":\"clust_2\",\"3\":\"clust_3\",\"4\":\"1.1909799\",\"5\":\"0.2223971\",\"6\":\"2.1595626\",\"7\":\"0.010\",\"8\":\"**\",\"_rn_\":\"1\"},{\"1\":\"om_loi\",\"2\":\"clust_2\",\"3\":\"clust_4\",\"4\":\"1.4278983\",\"5\":\"-0.8783648\",\"6\":\"3.7341615\",\"7\":\"0.351\",\"8\":\"ns\",\"_rn_\":\"2\"},{\"1\":\"om_loi\",\"2\":\"clust_2\",\"3\":\"clust_5\",\"4\":\"0.8224702\",\"5\":\"-0.1739072\",\"6\":\"1.8188477\",\"7\":\"0.137\",\"8\":\"ns\",\"_rn_\":\"3\"},{\"1\":\"om_loi\",\"2\":\"clust_3\",\"3\":\"clust_4\",\"4\":\"0.2369185\",\"5\":\"-2.0414863\",\"6\":\"2.5153232\",\"7\":\"0.992\",\"8\":\"ns\",\"_rn_\":\"4\"},{\"1\":\"om_loi\",\"2\":\"clust_3\",\"3\":\"clust_5\",\"4\":\"-0.3685096\",\"5\":\"-1.2814039\",\"6\":\"0.5443846\",\"7\":\"0.705\",\"8\":\"ns\",\"_rn_\":\"5\"},{\"1\":\"om_loi\",\"2\":\"clust_4\",\"3\":\"clust_5\",\"4\":\"-0.6054281\",\"5\":\"-2.8899152\",\"6\":\"1.6790590\",\"7\":\"0.888\",\"8\":\"ns\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# now we add a column \"comparison\" needed in order for \n# biostat::cld to make our \"compact letter display\" (letters\n# showing where we can/can't reject null that means are the same)\n# pairwise comps w/ Dunn's test \n\ngh_comp <- gh_om %>% \n  mutate(comparison = glue(\"{group1}-{group2}\"))\n\n\nbiostat::make_cld(p.adj ~ comparison, data = gh_comp)  \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"group\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"cld\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"spaced_cld\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"clust_2\",\"2\":\"a\",\"3\":\"a_\",\"_rn_\":\"1\"},{\"1\":\"clust_3\",\"2\":\"b\",\"3\":\"_b\",\"_rn_\":\"2\"},{\"1\":\"clust_4\",\"2\":\"ab\",\"3\":\"ab\",\"_rn_\":\"3\"},{\"1\":\"clust_5\",\"2\":\"ab\",\"3\":\"ab\",\"_rn_\":\"4\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Function to plot model checks\n\nI want to make some plots to check the assumptions of normally distributed residuals and homogeneity of variance.\nIn chapter 27, where I show the non-parametric pairwise tests, I also have a section for running Levene's test to check homogeneity of variance.\nHowever, since Welch's ANOVA and Games-Howell make no assumptions about homogeneity variance, I'm not worried about running Levene's test here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# working with these variables for the model checks\n# independent:  k= 4, 6, 8\n# dependent:  vars = om_loi, dbthirdbar,  ph1to1h2o, caco3, claytotal\n\ncheck_plots_anova <- function(soil_var, k_opt, df, log_trans_adj = FALSE) {\n  \n  dat_no_na <- df %>%\n    select(val_unit_id,\n           all_of(k_opt),\n           all_of(soil_var)) %>%\n    drop_na(all_of(soil_var))\n  \n  # checking if any clusters are represented by 1 or less data points. Want to drop these\n  \n  n_obs_per_cluster <- dat_no_na %>%\n    count(.data[[k_opt]])\n  \n  single_obs_clusters <- n_obs_per_cluster %>%\n    filter(n <= 1) %>%\n    pull(.data[[k_opt]])\n  \n  if (length(single_obs_clusters) == 0) {\n    dat_subset <- dat_no_na\n    \n  } else{\n    dat_subset <- dat_no_na %>%\n      filter(!(.data[[k_opt]] %in% single_obs_clusters))\n    \n  }\n  \n  if(log_trans_adj){\n    \n    # note this is for CaCO3, need to add 1 to avoid\n    # zero values\n    f <- paste0(\"log10(\", soil_var, \"+1)~\", k_opt)\n    \n  }else{\n    \n    f <- paste0(soil_var, \" ~ \", k_opt)\n    \n  }\n  \n  mod <- lm(formula = f,\n            data = dat_subset)\n  \n  check_plots <- performance::check_model(mod, check = c(\"normality\", \"homogeneity\", \"linearity\"))  \n  \n  return(list(var = glue(\"{soil_var}\"),\n              plots = check_plots))\n  \n}\n```\n:::\n\n\n## k=4 model checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"claytotal\",\n                  k_opt = \"k_4\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nclaytotal\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"ph1to1h2o\",\n                  k_opt = \"k_4\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nph1to1h2o\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"dbthirdbar\",\n                  k_opt = \"k_4\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ndbthirdbar\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"om_loi\",\n                  k_opt = \"k_4\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nom_loi\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-7-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# note we need to log10 transform here (+1) to meet the assumption of normally distributed residuals\ncheck_plots_anova(soil_var = \"caco3\",\n                  k_opt = \"k_4\", \n                  df = val_dat,\n                  log_trans_adj = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ncaco3\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-7-5.png){width=672}\n:::\n:::\n\n\n## k=6 model checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"claytotal\",\n                  k_opt = \"k_6\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nclaytotal\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"ph1to1h2o\",\n                  k_opt = \"k_6\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nph1to1h2o\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"dbthirdbar\",\n                  k_opt = \"k_6\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ndbthirdbar\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"om_loi\",\n                  k_opt = \"k_6\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nom_loi\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-8-4.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"caco3\",\n                  k_opt = \"k_6\", \n                  df = val_dat,\n                  log_trans_adj = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ncaco3\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-8-5.png){width=672}\n:::\n:::\n\n\n## k=8 model checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"claytotal\",\n                  k_opt = \"k_8\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nclaytotal\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"ph1to1h2o\",\n                  k_opt = \"k_8\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nph1to1h2o\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"dbthirdbar\",\n                  k_opt = \"k_8\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ndbthirdbar\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"om_loi\",\n                  k_opt = \"k_8\", \n                  df = val_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\nom_loi\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-9-4.png){width=672}\n:::\n\n```{.r .cell-code}\ncheck_plots_anova(soil_var = \"caco3\",\n                  k_opt = \"k_8\", \n                  df = val_dat, \n                  log_trans_adj = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$var\ncaco3\n\n$plots\n```\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-9-5.png){width=672}\n:::\n:::\n\n\n## Function for Games-Howell pairwise comparisons\n\nArguments: soil property and k option (model version / number of clusters) and validation dataframe.\n\nReturns: all pairwise comparisons in a dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_clust_pairwise <- function(soil_var, k_opt, df = val_dat) {\n  ### prep data\n  \n  dat_no_na <- df %>%\n    select(val_unit_id,\n           all_of(k_opt),\n           all_of(soil_var)) %>%\n    drop_na(all_of(soil_var))\n  \n  # can't do pairwise t-tests with only 1 obs in a\n  # group, so need to filter those out\n  \n  n_obs_per_cluster <- dat_no_na %>%\n    count(.data[[k_opt]])\n  \n  single_obs_clusters <- n_obs_per_cluster %>%\n    filter(n <= 1) %>%\n    pull(.data[[k_opt]])\n  \n  if (length(single_obs_clusters) == 0) {\n    dat_subset <- dat_no_na\n    \n  } else{\n    dat_subset <- dat_no_na %>%\n      filter(!(.data[[k_opt]] %in% single_obs_clusters))\n    \n  }\n  \n  ### perform pairwise comparison\n  \n    f <- as.formula(paste0(soil_var, \" ~ \", k_opt))\n  \n  pairs_df <- games_howell_test(data = dat_subset,\n                                formula = f) %>%\n    mutate(comparison = glue(\"{group1} - {group2}\"))\n  \n  cld_df <- biostat::make_cld(p.adj ~ comparison,\n                              data = pairs_df)\n  \n  ### results\n  \n  results_list <- list(pairs_df = pairs_df,\n                       cld = cld_df)\n  \n  return(results_list)\n  \n}\n```\n:::\n\n\n## Example function output\n\nThis is what the pairwise function I wrote above returns:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nph_test <- compare_clust_pairwise(soil_var = \"ph1to1h2o\",\n                       k_opt = \"k_8\",\n                       df = val_dat) \n\nph_test\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$pairs_df\n# A tibble: 21 Ã— 9\n   .y.       group1  group2  estimate conf.low conf.high    p.adj p.adj.signif\n   <chr>     <chr>   <chr>      <dbl>    <dbl>     <dbl>    <dbl> <chr>       \n 1 ph1to1h2o clust_1 clust_2 -0.119     -1.66      1.42  1   e+ 0 ns          \n 2 ph1to1h2o clust_1 clust_3  0.00222   -1.50      1.50  1   e+ 0 ns          \n 3 ph1to1h2o clust_1 clust_4  1.16      -0.399     2.71  1.32e- 1 ns          \n 4 ph1to1h2o clust_1 clust_5  0.566     -0.926     2.06  6.68e- 1 ns          \n 5 ph1to1h2o clust_1 clust_6  1.39      -0.165     2.94  7.4 e- 2 ns          \n 6 ph1to1h2o clust_1 clust_7  0.625     -0.865     2.12  5.87e- 1 ns          \n 7 ph1to1h2o clust_2 clust_3  0.122     -0.451     0.694 9.81e- 1 ns          \n 8 ph1to1h2o clust_2 clust_4  1.28       0.953     1.60  0        ****        \n 9 ph1to1h2o clust_2 clust_5  0.685      0.220     1.15  6.27e- 4 ***         \n10 ph1to1h2o clust_2 clust_6  1.51       1.18      1.84  9.92e-13 ****        \n# â„¹ 11 more rows\n# â„¹ 1 more variable: comparison <glue>\n\n$cld\n    group cld spaced_cld\n1 clust_1 abc        abc\n2 clust_2   a        a__\n3 clust_3  ab        ab_\n4 clust_4   c        __c\n5 clust_5   b        _b_\n6 clust_6   c        __c\n7 clust_7   b        _b_\n```\n:::\n\n```{.r .cell-code}\ncomps <- ph_test[[\"pairs_df\"]]\n\ncomps %>% \n  select(group1, group2, p.adj) %>% \n  filter(p.adj < 0.05)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"group1\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"group2\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"p.adj\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"clust_2\",\"2\":\"clust_4\",\"3\":\"0.00e+00\"},{\"1\":\"clust_2\",\"2\":\"clust_5\",\"3\":\"6.27e-04\"},{\"1\":\"clust_2\",\"2\":\"clust_6\",\"3\":\"9.92e-13\"},{\"1\":\"clust_2\",\"2\":\"clust_7\",\"3\":\"3.03e-04\"},{\"1\":\"clust_3\",\"2\":\"clust_4\",\"3\":\"8.95e-04\"},{\"1\":\"clust_3\",\"2\":\"clust_6\",\"3\":\"2.20e-04\"},{\"1\":\"clust_4\",\"2\":\"clust_5\",\"3\":\"3.00e-03\"},{\"1\":\"clust_4\",\"2\":\"clust_7\",\"3\":\"1.40e-02\"},{\"1\":\"clust_5\",\"2\":\"clust_6\",\"3\":\"2.22e-05\"},{\"1\":\"clust_6\",\"2\":\"clust_7\",\"3\":\"1.74e-04\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Run pairwise comparisons\n\nHere I create a dataframe to hold the results of the pairwise comparisons, then use `map2()` to iterate over the variables and cluster sizes, running all the tests.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# transform CaCO3 in the dataframe beforehand\nval_dat_trans <- val_dat %>% \n  mutate(caco3 = log10(caco3+1)) \n\n# dependent vars\nsoil_var <- c(\"claytotal\", \"ph1to1h2o\", \"om_loi\", \"caco3\", \"dbthirdbar\")\n\n# independent vars all possible values of k (number of clusters)\nk_opt <- as.character(glue(\"k_{c(4, 5, 6, 7, 8, 9, 10, 11)}\"))\n\n# create df with all combinations of var_names x clusters\nmod_template <- tidyr::crossing(soil_var, k_opt)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# run the pairwise comparisons for each var and cluster size\ndiffs_df <- mod_template %>%\n  mutate(comps_all = map2(\n    .x = soil_var,\n    .y = k_opt,\n    .f = compare_clust_pairwise\n  ))\n\n\n\n# unnest once to get the pairs_df and cld_df dfs \n# as their own columns\ndiffs_unnest <- diffs_df %>% \n  unnest(comps_all) %>% \n  mutate(obj_names = names(comps_all))\n\n# want to save pairs_df and cld_df dat separately, so filtering\n# and then unnesting again to get rectangular data \npairs_dat <- diffs_unnest %>% \n  filter(obj_names == \"pairs_df\") %>% \n  unnest(comps_all) %>% \n  select(-obj_names)\n\nwrite_csv(pairs_dat, \"data/pca_welch_pairwise_results_all.csv\")\n\ncld_dat <- diffs_unnest %>% \n  filter(obj_names == \"cld\") %>% \n  unnest(comps_all) %>% \n  select(-obj_names)\n\nwrite_csv(cld_dat, \"data/cld_display_welch.csv\")\n```\n:::\n\n\nNow need to count how many of the tests have an adjusted p-value \\< 0.05.\nAll of the p-values are already adjusted (see documentation for `games_howell_test()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_sig_comps <- function(df){\n  \n  df %>% \n    filter(p.adj<0.05) %>% \n    nrow()\n  \n}\n\nsig_diffs_df <- pairs_dat %>%\n  select(k_opt, soil_var, group1, group2, p.adj) %>% \n  group_by(k_opt, soil_var) %>%\n  nest(data = c(group1, group2, p.adj)) %>%\n  mutate(n_sig_comps = map_int(data, count_sig_comps)) %>%\n  mutate(\n    num_regions = as.numeric(str_extract(k_opt, \"[:digit:]+\")),\n    possible_comps = (num_regions * (num_regions - 1)) / 2,\n    alpha_comps = round(possible_comps * 0.05, digits = 0)\n  ) %>%\n  select(soil_var,\n         k_opt,\n         num_regions,\n         data,\n         n_sig_comps,\n         possible_comps,\n         alpha_comps)\n\nsig_diffs_summary <- sig_diffs_df %>% \n  select(soil_var,\n         k_opt,\n         num_regions,\n         n_sig_comps,\n         possible_comps,\n         alpha_comps)\n\nwrite_csv(sig_diffs_summary, \"data/pca_welch_pairwise_comparisons_summary.csv\")\n```\n:::\n\n\n## Plot comparisons\n\n### All clusters\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nFor context, this plot shows a black line for the total number of **possible** contrasts.\nNote that because we are showing each soil property variable separately, the \"total possible\" line illustrates the total number of possible comparisons for a single variable\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nTwo other ways to contextualize the number of significant contrasts: 1) with a table, and 2) with a plot showing how the % significant contrasts (as a function of total possible) changes as the number of clusters goes up.\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"num_regions\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n_sig_comps\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"possible_comps\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"percent_sig\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"alpha_5perc\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"4\",\"2\":\"20\",\"3\":\"30\",\"4\":\"67\",\"5\":\"2\"},{\"1\":\"5\",\"2\":\"24\",\"3\":\"50\",\"4\":\"48\",\"5\":\"2\"},{\"1\":\"6\",\"2\":\"22\",\"3\":\"75\",\"4\":\"29\",\"5\":\"4\"},{\"1\":\"7\",\"2\":\"32\",\"3\":\"105\",\"4\":\"30\",\"5\":\"5\"},{\"1\":\"8\",\"2\":\"40\",\"3\":\"140\",\"4\":\"29\",\"5\":\"7\"},{\"1\":\"9\",\"2\":\"41\",\"3\":\"180\",\"4\":\"23\",\"5\":\"9\"},{\"1\":\"10\",\"2\":\"52\",\"3\":\"225\",\"4\":\"23\",\"5\":\"11\"},{\"1\":\"11\",\"2\":\"52\",\"3\":\"275\",\"4\":\"19\",\"5\":\"14\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](29-welch-pairwise_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "29-welch-pairwise_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}