{
  "hash": "34900c26e87378e5858ae92f86f580a1",
  "result": {
    "markdown": "# Welch ANOVA - compare variation explained\n\n## Overview\n\nThis chapter is similar to 28 (compare variation demo), but here am using Welch ANOVA followed by calculation of epsilon squared as an effect size (which we can do because `{effectsize}` uses the F stats from the Welch's ANOVA to estimate epsilon squared.\n\nThe goal is to use selected soil health indicators from the CIG dataset to compare the amount of variation explained when grouping the data by geographic region (per the CIG design) vs. taxaonomy vs. soil health group (generated by k-means clustering).\n\nThis is meant to be a demonstration of how the soil health groups generated by k-means might be useful in helping to set benchmarks and expectations for soil health indicators measured on different types of soil.\nThe logic is that by reducing the within-group variation through stratification by group or region, we make it easier to detect **changes resulting from management differences**.\n\n## Models\n\nResponse variables: soil health indicators (perhaps the NRCS tech note list?).\nShould we use just 1 year of data to avoid pulling in year-to-year variability?\nCould choose 2019, because this is the year for which we have PLFA data, and PLFA is on the NRCS list.\n\nVariables from the NRCS Soil Health Tech Note recommended methods:\n\n-   Aggregate stability\n-   PMC\n-   (skip - known weirdness in CIG data from different pHs/discussed with Nic). enzyme activities (BG, NAG, PASE) we have cellobiohydrolase data too, but skipping it b/c we have more missing data for this one (supply chain issues) and it's not on the NRCS list, which I'm using as my justification for choosing these ones\n-   POXC\n-   (skip - weird thing with RRV poor extraction in CIG data) ACE Protein\n-   PLFA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0     ✔ purrr   1.0.1\n✔ tibble  3.2.1     ✔ dplyr   1.1.2\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'purrr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.2.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stringr' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(ggbeeswarm)\nlibrary(lmerTest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lme4\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\n\nAttaching package: 'lmerTest'\n\nThe following object is masked from 'package:lme4':\n\n    lmer\n\nThe following object is masked from 'package:stats':\n\n    step\n```\n:::\n\n```{.r .cell-code}\nlibrary(rstatix)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rstatix' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rstatix'\n\nThe following object is masked from 'package:stats':\n\n    filter\n```\n:::\n\n```{.r .cell-code}\nlibrary(gt)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gt' was built under R version 4.2.3\n```\n:::\n:::\n\n\n## Data\n\nAs part of the validation process for my k-means analysis, I determined the soil health group assigned to each CIG sampling area at the mapunit level (hillslope within management condition).\n\n### Load data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# this file created in \"extract_raster_values_at_validation_points.R\"\n# it is at the \"sample\" level\ncig_comps <- read_csv(\"data/cig_incl_components_table.csv\") %>% \n  # for now, just using 2019 data so we avoid the year-to-year variability we\n  # know is there, and b/c we have PLFA data for 2019 only\n  filter(sample_id %in% c(1:243))\n\n\n# this is for disambiguating which MUKEY should be assigned\n# to each CIG val_unit_id (mapunit), because sometimes the\n# GPS points landed in multiple mapunits\n# the code that handles this is in \"extract_raster_values_at_validation_points.R\ncig_mukey_votes <- read_csv(\"data/cig_mukey_votes_for_validation.csv\") \n\n# cluster assigned to each CIG point. this dataset is created in \"prep_validation_data_for_pca_version.R\"\n# it is at the \"validation unit\" level (summarized to hillslope within management)\ncig_clus <- read_csv(\"data/validation_data_pca_clusters_and_soil_props.csv\") %>% \n  filter(str_detect(val_unit_id, \"CV\") |\n           str_detect(val_unit_id, \"SH\") |\n         str_detect(val_unit_id, \"UD\")) %>%\n  mutate(region = str_extract(val_unit_id, \"[:alpha:]{2}\"),\n         soil_group = glue(\"grp-{k_8}\")) %>% \n  select(val_unit_id, soil_group, k_8, region)\n\n# currently from csv saved by \"heatmap_validation_counties.R\", \n# but need to move this to a more logical place \ncig_mlras <- read_csv(\"data/cig_mlra_by_val_unit_id.csv\") \n\ncig_val <- left_join(cig_clus, cig_mlras, by = \"val_unit_id\") %>%\n  # need to fix this NA created by the join, it happened\n  # because this RR4-CV site had a label change from A to B\n  # during the harmonization I did to align soil textures\n  mutate(\n    MLRA_NAME = case_when(\n      val_unit_id == \"RR4-CV-B\" ~ \"Red River Valley of the North\",\n      TRUE ~ MLRA_NAME\n    ),\n    mlra_short = case_when(\n      str_detect(MLRA_NAME, \"Eastern Iowa\") ~ \"E IA MN Till\",\n      str_detect(MLRA_NAME, \"Red River\") ~ \"Red River\",\n      str_detect(MLRA_NAME, \"Rolling Till Prairie\") ~ \"Rol Till Pr\",\n      str_detect(MLRA_NAME, \"Central Min\") ~ \"C MN Sandy\",\n      str_detect(MLRA_NAME, \"Gray Drift\") ~ \"N MN Gray\",\n      str_detect(MLRA_NAME, \"Central Iowa\") ~ \"C IA MN Till\",\n      TRUE ~ \"Fix me\"\n    )\n  )\n\n# want all the CIG lab observations (not averaged to the plot level)\nlab <- read_csv(\"../CIG/cig-main/cig_lab_data_all_20230301.csv\") %>%\n  mutate(val_unit_id = glue(\"{site}-{treatment}-{position}\")) %>%\n  select(\n    sample_id,\n    val_unit_id,\n    region,\n    position,\n    corr_percent_stable_gr2mm,\n    ugC_g_day,\n    BG_activity,\n    NAG_activity,\n    P_activity,\n    poxc_mg_kg,\n    mean_protein_mg_g,\n    mbc_ug_g_soil,\n    mbn_ug_g_soil,\n    total_living_microbial_biomass_plfa_ng_g,\n    total_bacteria_plfa_ng_g,\n    total_fungi_plfa_ng_g,\n    total_bacteria_percent_of_tot_biomass,\n    total_fungi_percent_of_tot_biomass\n  ) %>% \n  filter(sample_id %in% c(1:243))\n\n# missing data due to sample contamination in 2019 samples\n# that were run for PLFA. Pulling MBN values from 2020\n# for this validation site only after confirming that the values \n# are in a similar range for this soil type, hillslope position,\n# and region\nmbn_mw4_cva <-\n  read_csv(\"../CIG/cig-main/cig_lab_data_all_20230301.csv\") %>%\n  mutate(val_unit_id = glue(\"{site}-{treatment}-{position}\")) %>%\n  filter(sample_id %in% c(474:476)) %>%\n  pull(mbn_ug_g_soil) %>%\n  mean(., na.rm = TRUE)\n```\n:::\n\n\n### Summarize to mapunit level\n\nRecall that the lab data and the component data need to be summarized to the \"mapunit\" level.\nThis involves averaging the soil properties and determining the majority taxonomic classification for each MUKEY based on the included components (recall that most MUKEYs have just 1 contributing component, so we just need to account for those that have \\>1 contributing component to determine, for each level of taxonomy I look at, what the majority assignment should be).\n\nStarting with the taxonomy data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# how many unique mukeys are we working with?\n(cig_mukeys <- cig_comps %>%\n    pull(mukey) %>%\n    unique() %>%\n    length())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 37\n```\n:::\n\n```{.r .cell-code}\n# Q: which mukeys have multiple components contributing data?\n# A: 16 unique mukeys\ncig_comps %>% \n  select(mukey, cokey, taxclname:taxpartsize) %>% \n  distinct() %>% \n  group_by(mukey) %>% \n  count() %>% \n  filter(n>1)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"mukey\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"428130\",\"2\":\"3\"},{\"1\":\"428131\",\"2\":\"3\"},{\"1\":\"428142\",\"2\":\"2\"},{\"1\":\"428145\",\"2\":\"2\"},{\"1\":\"428181\",\"2\":\"2\"},{\"1\":\"436024\",\"2\":\"2\"},{\"1\":\"436036\",\"2\":\"3\"},{\"1\":\"2374047\",\"2\":\"2\"},{\"1\":\"2798096\",\"2\":\"2\"},{\"1\":\"2798867\",\"2\":\"2\"},{\"1\":\"2798868\",\"2\":\"2\"},{\"1\":\"2798874\",\"2\":\"2\"},{\"1\":\"2798992\",\"2\":\"2\"},{\"1\":\"2798993\",\"2\":\"2\"},{\"1\":\"2798997\",\"2\":\"2\"},{\"1\":\"2877272\",\"2\":\"2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# goal: assign each mukey a representative suborder\n# based on the suborders of the components within it.\n# should get back object w/ length 37 (# of unique mukeys)\ncig_comps %>% \n  select(mukey, cokey, comppct_r, taxsuborder) %>% \n  distinct() %>% \n  group_by(mukey, taxsuborder) %>% \n  summarise(tot_percent = sum(comppct_r), .groups = \"drop\") %>% \n  group_by(mukey) %>% \n  slice_max(tot_percent)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"mukey\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"taxsuborder\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"tot_percent\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"400437\",\"2\":\"Aqualfs\",\"3\":\"95\"},{\"1\":\"400443\",\"2\":\"Aquolls\",\"3\":\"85\"},{\"1\":\"400453\",\"2\":\"Aquolls\",\"3\":\"90\"},{\"1\":\"400457\",\"2\":\"Aqualfs\",\"3\":\"85\"},{\"1\":\"400459\",\"2\":\"Udalfs\",\"3\":\"90\"},{\"1\":\"400474\",\"2\":\"Udalfs\",\"3\":\"95\"},{\"1\":\"428075\",\"2\":\"Udalfs\",\"3\":\"80\"},{\"1\":\"428123\",\"2\":\"Udalfs\",\"3\":\"80\"},{\"1\":\"428129\",\"2\":\"Udalfs\",\"3\":\"80\"},{\"1\":\"428130\",\"2\":\"Udalfs\",\"3\":\"55\"},{\"1\":\"428131\",\"2\":\"Udalfs\",\"3\":\"55\"},{\"1\":\"428138\",\"2\":\"Aquolls\",\"3\":\"90\"},{\"1\":\"428142\",\"2\":\"Udolls\",\"3\":\"78\"},{\"1\":\"428145\",\"2\":\"Udolls\",\"3\":\"80\"},{\"1\":\"428181\",\"2\":\"Udalfs\",\"3\":\"70\"},{\"1\":\"436024\",\"2\":\"Udolls\",\"3\":\"75\"},{\"1\":\"436029\",\"2\":\"Udolls\",\"3\":\"85\"},{\"1\":\"436036\",\"2\":\"Udolls\",\"3\":\"85\"},{\"1\":\"2374013\",\"2\":\"Aquolls\",\"3\":\"75\"},{\"1\":\"2374037\",\"2\":\"Udolls\",\"3\":\"85\"},{\"1\":\"2374047\",\"2\":\"Aquolls\",\"3\":\"95\"},{\"1\":\"2374071\",\"2\":\"Aquolls\",\"3\":\"85\"},{\"1\":\"2374074\",\"2\":\"Udolls\",\"3\":\"85\"},{\"1\":\"2798080\",\"2\":\"Aquerts\",\"3\":\"80\"},{\"1\":\"2798085\",\"2\":\"Aquolls\",\"3\":\"80\"},{\"1\":\"2798091\",\"2\":\"Aquolls\",\"3\":\"70\"},{\"1\":\"2798096\",\"2\":\"Aquerts\",\"3\":\"80\"},{\"1\":\"2798867\",\"2\":\"Aquolls\",\"3\":\"70\"},{\"1\":\"2798868\",\"2\":\"Aquolls\",\"3\":\"50\"},{\"1\":\"2798874\",\"2\":\"Aquerts\",\"3\":\"75\"},{\"1\":\"2798950\",\"2\":\"Aquerts\",\"3\":\"80\"},{\"1\":\"2798992\",\"2\":\"Aquolls\",\"3\":\"70\"},{\"1\":\"2798993\",\"2\":\"Aquolls\",\"3\":\"50\"},{\"1\":\"2798997\",\"2\":\"Aquerts\",\"3\":\"75\"},{\"1\":\"2799002\",\"2\":\"Aquolls\",\"3\":\"70\"},{\"1\":\"2835044\",\"2\":\"Aquolls\",\"3\":\"85\"},{\"1\":\"2877272\",\"2\":\"Udolls\",\"3\":\"75\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nFunction for determining representative taxonomic level .\nUsing similar code to the example with suborder above, this function allows me to summarize the representative taxonomic level (order, suborder, etc.) based on % area.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculate representative taxonomy\ncalc_rep_tax <- function(tax_level, comp_df){\n  \n  comp_df %>% \n  select(mukey, cokey, comppct_r, {{tax_level}}) %>% \n  distinct() %>% \n  group_by(mukey, {{tax_level}}) %>% \n  summarise(tot_percent = sum(comppct_r), .groups = \"drop\") %>% \n  group_by(mukey) %>% \n  slice_max(tot_percent) %>% \n    select(-tot_percent)\n  \n}\n\n\norder <- calc_rep_tax(taxorder, cig_comps)\nsuborder <- calc_rep_tax(taxsuborder, cig_comps)\ngrt_grp <- calc_rep_tax(taxgrtgroup, cig_comps)\nsub_grp <- calc_rep_tax(taxsubgrp, cig_comps)\nfamily <- calc_rep_tax(taxclname, cig_comps)\n\ntax_joined <- list(order, suborder, grt_grp, sub_grp, family) %>% \n  purrr::reduce(., left_join, by = \"mukey\")\n\ntax_val_key <- cig_comps %>% \n  select(val_unit_id, mukey) %>% \n  distinct()\n```\n:::\n\n\nNow time to summarize the lab data to the mapunit level, this is easier than the taxonomy because we can just take the average.\nRecall that we are working with 2019 data only.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlab_summary <- lab %>% \n  select(-sample_id) %>% \n  group_by(val_unit_id) %>% \n  summarise(across(where(is.numeric),\n                   ~mean(.x, na.rm = TRUE)))\n```\n:::\n\n\n### Join taxonomic and lab info with validation dataset\n\nHere, we create a dataset with one row for each validation unit in the CIG dataset.\nIt includes information about representative taxonomic classification at different levels (order, suborder, great group) and also representative values for the soil health indicators we want to analyze further below when comparing variance explained by different stratification options (region, taxonomy, k-means group).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nval_mukey <- left_join(cig_val, cig_mukey_votes, by = \"val_unit_id\") %>% \n  select(-c(n, max_vote))\n\nval_mukey_lab <- left_join(val_mukey, lab_summary, by = \"val_unit_id\")\n\nval_all <- left_join(val_mukey_lab, tax_joined, by = \"mukey\") %>%\n # on list from old key, this id no longer exists\n   filter(val_unit_id != \"RR4-CV-B\") %>% \n  mutate(mbn_ug_g_soil = case_when(\n    # dealing with missing data, see note at end of \n    # \"load data\" code block\n    val_unit_id == \"MW4-CV-A\" ~ mbn_mw4_cva,\n    TRUE ~ mbn_ug_g_soil\n  ))\n```\n:::\n\n\n## Response variables - exploratory plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrvars <- c(\"corr_percent_stable_gr2mm\",\n               \"ugC_g_day\",\n               \"poxc_mg_kg\",\n               \"mbc_ug_g_soil\",\n               \"mbn_ug_g_soil\", # include MBN?\n               \"total_living_microbial_biomass_plfa_ng_g\",\n               \"total_bacteria_plfa_ng_g\",\n               \"total_fungi_plfa_ng_g\"\n)\n\n\nval_long <- val_all %>% \n  select(val_unit_id, all_of(rvars)) %>% \n  pivot_longer(-val_unit_id) %>% \n  mutate( name = case_when(\n    name == \"corr_percent_stable_gr2mm\" ~ \"agg_stab\",\n    name == \"ugC_g_day\" ~ \"pmc_ugCgday\",\n    name == \"total_living_microbial_biomass_plfa_ng_g\" ~ \"PLFA total\",\n    name == \"total_bacteria_plfa_ng_g\" ~ \"PLFA bacteria\",\n    name == \"total_fungi_plfa_ng_g\" ~ \"PLFA fungi\",\n    TRUE ~ name\n    \n  ))\n\nval_long %>% \n  ggplot() + \n  geom_histogram(aes(value), bins = 20) +\n  facet_wrap(vars(name), scales = \"free\") +\n  ggtitle(\"Distribution (not transformed)\")\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nval_all %>% \n  select(val_unit_id, contains(\"percent_of\")) %>% \n  pivot_longer(-val_unit_id) %>% \n  ggplot() +\n  geom_histogram(aes(value), bins = 20) + \n  facet_wrap(vars(name))\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\nval_all %>% \n  select(val_unit_id, contains(\"percent_of\")) %>% \n  pivot_longer(-val_unit_id) %>% \n  group_by(name) %>% \n  summarise(min = min(value), \n            max = max(value))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"name\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"min\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"total_bacteria_percent_of_tot_biomass\",\"2\":\"45.286667\",\"3\":\"66.10333\"},{\"1\":\"total_fungi_percent_of_tot_biomass\",\"2\":\"3.216667\",\"3\":\"12.96333\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Stratification options\n\nWe could stratify the CIG points based on several different levels of Soil Taxonomy.\nHow do the CIG sampling points break down in terms of number per cluster, and number per taxonomic level(s) (order, suborder, etc)?\n\nFor k-means clusters/groups: here we see that there is only 1 representative from group 4, so probably won't be able to use that group for any calculations.\nBut the others are workable.\n\nFor the different taxonomic levels, suborder seems workable, it has \\>= 5 validation units in any given level.\nI think order is too broad, and by the time we get to sub-group, we have two subgroups with just 1 validation unit each, so would have to drop those.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nval_all %>% \n  count(k_8)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"k_8\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2\",\"2\":\"24\"},{\"1\":\"3\",\"2\":\"6\"},{\"1\":\"4\",\"2\":\"1\"},{\"1\":\"5\",\"2\":\"27\"},{\"1\":\"6\",\"2\":\"10\"},{\"1\":\"7\",\"2\":\"12\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nval_all %>% \n  count(mlra_short)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"mlra_short\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"C IA MN Till\",\"2\":\"15\"},{\"1\":\"C MN Sandy\",\"2\":\"5\"},{\"1\":\"E IA MN Till\",\"2\":\"24\"},{\"1\":\"N MN Gray\",\"2\":\"5\"},{\"1\":\"Red River\",\"2\":\"21\"},{\"1\":\"Rol Till Pr\",\"2\":\"10\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nval_all %>% \n  count(taxorder)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"taxorder\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Alfisols\",\"2\":\"26\"},{\"1\":\"Mollisols\",\"2\":\"43\"},{\"1\":\"Vertisols\",\"2\":\"11\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nval_all %>% \n  count(taxsuborder) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"taxsuborder\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Aqualfs\",\"2\":\"5\"},{\"1\":\"Aquerts\",\"2\":\"11\"},{\"1\":\"Aquolls\",\"2\":\"30\"},{\"1\":\"Udalfs\",\"2\":\"21\"},{\"1\":\"Udolls\",\"2\":\"13\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nval_all %>% \n  count(taxgrtgroup)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"taxgrtgroup\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Argiaquolls\",\"2\":\"3\"},{\"1\":\"Calciaquerts\",\"2\":\"5\"},{\"1\":\"Calciaquolls\",\"2\":\"10\"},{\"1\":\"Endoaquolls\",\"2\":\"17\"},{\"1\":\"Epiaqualfs\",\"2\":\"5\"},{\"1\":\"Epiaquerts\",\"2\":\"6\"},{\"1\":\"Hapludalfs\",\"2\":\"21\"},{\"1\":\"Hapludolls\",\"2\":\"13\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nval_all %>% \n  count(taxsubgrp)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"taxsubgrp\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Aeric Calciaquolls\",\"2\":\"7\"},{\"1\":\"Aquic Hapludalfs\",\"2\":\"1\"},{\"1\":\"Aquic Hapludolls\",\"2\":\"1\"},{\"1\":\"Aquollic Hapludalfs\",\"2\":\"7\"},{\"1\":\"Calcic Hapludolls\",\"2\":\"12\"},{\"1\":\"Mollic Epiaqualfs\",\"2\":\"5\"},{\"1\":\"Mollic Hapludalfs\",\"2\":\"9\"},{\"1\":\"Typic Argiaquolls\",\"2\":\"3\"},{\"1\":\"Typic Calciaquerts\",\"2\":\"5\"},{\"1\":\"Typic Calciaquolls\",\"2\":\"3\"},{\"1\":\"Typic Endoaquolls\",\"2\":\"17\"},{\"1\":\"Typic Epiaquerts\",\"2\":\"6\"},{\"1\":\"Typic Hapludalfs\",\"2\":\"4\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nval_all %>% count(taxclname)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"taxclname\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Fine, smectitic, frigid Typic Calciaquerts\",\"2\":\"5\"},{\"1\":\"Fine, smectitic, frigid Typic Epiaquerts\",\"2\":\"3\"},{\"1\":\"Fine-loamy, mixed, superactive, calcareous, mesic Typic Endoaquolls\",\"2\":\"1\"},{\"1\":\"Fine-loamy, mixed, superactive, frigid Aquic Hapludalfs\",\"2\":\"1\"},{\"1\":\"Fine-loamy, mixed, superactive, frigid Calcic Hapludolls\",\"2\":\"4\"},{\"1\":\"Fine-loamy, mixed, superactive, frigid Mollic Hapludalfs\",\"2\":\"7\"},{\"1\":\"Fine-loamy, mixed, superactive, frigid Typic Hapludalfs\",\"2\":\"4\"},{\"1\":\"Fine-loamy, mixed, superactive, mesic Aquic Hapludolls\",\"2\":\"1\"},{\"1\":\"Fine-loamy, mixed, superactive, mesic Aquollic Hapludalfs\",\"2\":\"7\"},{\"1\":\"Fine-loamy, mixed, superactive, mesic Calcic Hapludolls\",\"2\":\"8\"},{\"1\":\"Fine-loamy, mixed, superactive, mesic Mollic Epiaqualfs\",\"2\":\"5\"},{\"1\":\"Fine-loamy, mixed, superactive, mesic Mollic Hapludalfs\",\"2\":\"2\"},{\"1\":\"Fine-loamy, mixed, superactive, mesic Typic Argiaquolls\",\"2\":\"3\"},{\"1\":\"Fine-loamy, mixed, superactive, mesic Typic Endoaquolls\",\"2\":\"13\"},{\"1\":\"Fine-silty, mixed, superactive, frigid Aeric Calciaquolls\",\"2\":\"7\"},{\"1\":\"Fine-silty, mixed, superactive, frigid Typic Calciaquolls\",\"2\":\"3\"},{\"1\":\"Fine-silty, mixed, superactive, mesic Typic Endoaquolls\",\"2\":\"3\"},{\"1\":\"Very-fine, smectitic, frigid Typic Epiaquerts\",\"2\":\"3\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nxtabs(~region+taxorder, data = val_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      taxorder\nregion Alfisols Mollisols Vertisols\n    MW       13        11         0\n    RR        0        10        11\n    ST       13         7         0\n    SW        0        15         0\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## Crosstabs w/ UD\n\nWas originally thinking about whether we should include or exclude UD (undisturbed/unfarmed sites) because we know they are a major source of variance (they have much higher values across the board for all these indicators).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxtabs(~soil_group + taxsuborder, data = val_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          taxsuborder\nsoil_group Aqualfs Aquerts Aquolls Udalfs Udolls\n     grp-2       5       0       3     10      6\n     grp-3       0       0       0      6      0\n     grp-4       0       0       1      0      0\n     grp-5       0      11      16      0      0\n     grp-6       0       0      10      0      0\n     grp-7       0       0       0      5      7\n```\n:::\n\n```{.r .cell-code}\nxtabs(~taxgrtgroup + soil_group, data = val_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              soil_group\ntaxgrtgroup    grp-2 grp-3 grp-4 grp-5 grp-6 grp-7\n  Argiaquolls      3     0     0     0     0     0\n  Calciaquerts     0     0     0     5     0     0\n  Calciaquolls     0     0     0     0    10     0\n  Endoaquolls      0     0     1    16     0     0\n  Epiaqualfs       5     0     0     0     0     0\n  Epiaquerts       0     0     0     6     0     0\n  Hapludalfs      10     6     0     0     0     5\n  Hapludolls       6     0     0     0     0     7\n```\n:::\n\n```{.r .cell-code}\nxtabs(~mlra_short + soil_group, data = val_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              soil_group\nmlra_short     grp-2 grp-3 grp-4 grp-5 grp-6 grp-7\n  C IA MN Till     5     0     1     5     0     4\n  C MN Sandy       2     0     0     0     0     3\n  E IA MN Till    13     0     0    11     0     0\n  N MN Gray        0     5     0     0     0     0\n  Red River        0     0     0    11    10     0\n  Rol Till Pr      4     1     0     0     0     5\n```\n:::\n:::\n\n\n## Crosstabs w/out UD\n\n\n::: {.cell}\n\n```{.r .cell-code}\nval_farm <- val_all %>% \n  filter(!str_detect(val_unit_id, \"UD\"))\n\nxtabs(~soil_group + region, data = val_farm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          region\nsoil_group MW RR ST SW\n     grp-2  9  0  6  3\n     grp-3  0  0  4  0\n     grp-4  0  0  0  1\n     grp-5  7  8  0  4\n     grp-6  0  8  0  0\n     grp-7  0  0  6  4\n```\n:::\n\n```{.r .cell-code}\nxtabs(~soil_group + taxsuborder, data = val_farm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          taxsuborder\nsoil_group Aqualfs Aquerts Aquolls Udalfs Udolls\n     grp-2       3       0       3      8      4\n     grp-3       0       0       0      4      0\n     grp-4       0       0       1      0      0\n     grp-5       0       8      11      0      0\n     grp-6       0       0       8      0      0\n     grp-7       0       0       0      4      6\n```\n:::\n\n```{.r .cell-code}\nxtabs(~taxgrtgroup + soil_group, data = val_farm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              soil_group\ntaxgrtgroup    grp-2 grp-3 grp-4 grp-5 grp-6 grp-7\n  Argiaquolls      3     0     0     0     0     0\n  Calciaquerts     0     0     0     4     0     0\n  Calciaquolls     0     0     0     0     8     0\n  Endoaquolls      0     0     1    11     0     0\n  Epiaqualfs       3     0     0     0     0     0\n  Epiaquerts       0     0     0     4     0     0\n  Hapludalfs       8     4     0     0     0     4\n  Hapludolls       4     0     0     0     0     6\n```\n:::\n:::\n\n\n## Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# keep only data points for soil regions where we have >1 validation area (need to drop group 4)\nsub_dat <- val_all %>% \n  filter(k_8 %in% c(2, 3, 5:7))\n\n# creating this so I can test difference between including/excluding the UD sites.\nfarmdat <- sub_dat %>% \n  filter(!str_detect(val_unit_id, \"UD\"))\n\nsub_dat %>% \n  ggplot(aes(x = mlra_short, y = poxc_mg_kg)) + \n  geom_boxplot() +\n  geom_quasirandom(aes(color = soil_group)) +\n  theme_bw() +\n  ggtitle(\"MLRA\")\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsub_dat %>% \n  ggplot(aes(x = soil_group, y = poxc_mg_kg)) +\n  geom_boxplot() + \n  geom_quasirandom() +\n  theme_bw() + \n  ggtitle(\"Cluster/Group\")\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\nsub_dat %>% \n  ggplot(aes(x = taxsuborder, y = poxc_mg_kg)) +\n  geom_boxplot() + \n  geom_quasirandom(aes(color = soil_group)) +\n  theme_bw() +\n  ggtitle(\"Suborder\")\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-10-3.png){width=672}\n:::\n\n```{.r .cell-code}\nsub_dat %>% \n  ggplot(aes(x = taxgrtgroup, y = poxc_mg_kg)) +\n  geom_boxplot() + \n  geom_quasirandom(aes(color = soil_group)) +\n  theme_bw() +\n  ggtitle(\"Great Group\") +\n  theme(axis.text.x = element_text(angle = 15))\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-10-4.png){width=672}\n:::\n:::\n\n\n### Checking distributions\n\nTransformations needed (based on inspecting the plots below):\n\n-   None: aggregate stability, POXC\n-   Log10: total biomass PLFA, total bacteria PLFA, total fungi PLFA, MBC, MBN, PMC\n\n\n::: {.cell}\n\n:::\n\n\n#### Aggregate stability\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_transformations(var = corr_percent_stable_gr2mm,\n                     df = val_all,\n                     nbins = 15)\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n#### PLFA Indicators\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_transformations(var = total_living_microbial_biomass_plfa_ng_g,\n                     df = val_all,\n                     nbins = 15)\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_transformations(var = total_bacteria_plfa_ng_g,\n                     df = val_all,\n                     nbins = 15)\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_transformations(var = total_fungi_plfa_ng_g,\n                     df = val_all,\n                     nbins = 15)\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-13-3.png){width=672}\n:::\n:::\n\n\n#### Microbial biomass C & N (CFE)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_transformations(var = mbc_ug_g_soil,\n                     df = val_all,\n                     nbins = 15)\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_transformations(var = mbn_ug_g_soil,\n                     df = val_all,\n                     nbins = 15)\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n:::\n\n\n#### POXC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_transformations(var = poxc_mg_kg,\n                     df = val_all,\n                     nbins = 15)\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n#### PMC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_transformations(var = ugC_g_day,\n                     df = val_all,\n                     nbins = 10)\n```\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## Function to plot model checks\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_plots_anova <- function(soil_var, strat, df, log_trans) {\n  \n  dat_no_na <- df %>%\n    select(val_unit_id,\n           all_of(strat),\n           all_of(soil_var)) %>%\n    drop_na(all_of(soil_var))\n  \n  # checking if any clusters are represented by 1 or less data points. Want to drop these cuz can't calc variance with only 1\n\n  n_obs_per_group <- dat_no_na %>%\n    count(.data[[strat]])\n  \n  single_obs_groups <- n_obs_per_group %>%\n    filter(n <= 1) %>%\n    pull(.data[[strat]])\n  \n  if (length(single_obs_groups) == 0) {\n    dat_subset <- dat_no_na\n    \n  } else{\n    dat_subset <- dat_no_na %>%\n      filter(!(.data[[strat]] %in% single_obs_groups))\n    \n  }\n  \n  if (log_trans){\n    \n    f <- paste0(\"log(\", soil_var, \") ~ \", strat)\n    \n  }else{\n    \n    f <- paste0(soil_var, \" ~ \", strat)\n    \n  }\n  \n  mod <- lm(formula = f,\n            data = dat_subset)\n  \n  check_plots <- performance::check_model(mod, check = c(\"normality\", \"homogeneity\", \"linearity\"))  \n  \n  return(list(f_used = f,\n              plots = check_plots))\n  \n}\n```\n:::\n\n\n## Models to check\n\nWorking with these independent variables (stratification options):\n\n1.  soil_group (k-means);\n2.  mlra_short\n3.  taxsuborder\n4.  taxgrtgroup\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(dep_vars <- c(\"corr_percent_stable_gr2mm\",\n               \"ugC_g_day\",\n               \"poxc_mg_kg\",\n               \"mbc_ug_g_soil\",\n               \"mbn_ug_g_soil\", # include MBN?\n               \"total_living_microbial_biomass_plfa_ng_g\",\n               \"total_bacteria_plfa_ng_g\",\n               \"total_fungi_plfa_ng_g\"\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"corr_percent_stable_gr2mm\"               \n[2] \"ugC_g_day\"                               \n[3] \"poxc_mg_kg\"                              \n[4] \"mbc_ug_g_soil\"                           \n[5] \"mbn_ug_g_soil\"                           \n[6] \"total_living_microbial_biomass_plfa_ng_g\"\n[7] \"total_bacteria_plfa_ng_g\"                \n[8] \"total_fungi_plfa_ng_g\"                   \n```\n:::\n\n```{.r .cell-code}\n# determined by inspecting histograms above w/ different\n# transformation options\nlog_trans <- c(FALSE, \n               TRUE, \n               FALSE, \n               TRUE,\n               TRUE,\n               TRUE,\n               TRUE,\n               TRUE)\n```\n:::\n\n\n### K-means soil groups\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap2(\n  .x = dep_vars,\n  .y = log_trans,\n  .f = ~ check_plots_anova(\n    soil_var = .x,\n    log_trans = .y,\n    strat = \"soil_group\",\n    df = val_all\n  )\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[[1]]$f_used\n[1] \"corr_percent_stable_gr2mm ~ soil_group\"\n\n[[1]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[2]]\n[[2]]$f_used\n[1] \"log(ugC_g_day) ~ soil_group\"\n\n[[2]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[3]]\n[[3]]$f_used\n[1] \"poxc_mg_kg ~ soil_group\"\n\n[[3]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-19-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[4]]\n[[4]]$f_used\n[1] \"log(mbc_ug_g_soil) ~ soil_group\"\n\n[[4]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-19-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[5]]\n[[5]]$f_used\n[1] \"log(mbn_ug_g_soil) ~ soil_group\"\n\n[[5]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-19-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[6]]\n[[6]]$f_used\n[1] \"log(total_living_microbial_biomass_plfa_ng_g) ~ soil_group\"\n\n[[6]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-19-6.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[7]]\n[[7]]$f_used\n[1] \"log(total_bacteria_plfa_ng_g) ~ soil_group\"\n\n[[7]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-19-7.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[8]]\n[[8]]$f_used\n[1] \"log(total_fungi_plfa_ng_g) ~ soil_group\"\n\n[[8]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-19-8.png){width=672}\n:::\n:::\n\n\n### Region\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap2(\n  .x = dep_vars,\n  .y = log_trans,\n  .f = ~ check_plots_anova(\n    soil_var = .x,\n    log_trans = .y,\n    strat = \"region\",\n    df = val_all\n  )\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[[1]]$f_used\n[1] \"corr_percent_stable_gr2mm ~ region\"\n\n[[1]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[2]]\n[[2]]$f_used\n[1] \"log(ugC_g_day) ~ region\"\n\n[[2]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-20-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[3]]\n[[3]]$f_used\n[1] \"poxc_mg_kg ~ region\"\n\n[[3]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-20-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[4]]\n[[4]]$f_used\n[1] \"log(mbc_ug_g_soil) ~ region\"\n\n[[4]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-20-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[5]]\n[[5]]$f_used\n[1] \"log(mbn_ug_g_soil) ~ region\"\n\n[[5]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-20-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[6]]\n[[6]]$f_used\n[1] \"log(total_living_microbial_biomass_plfa_ng_g) ~ region\"\n\n[[6]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-20-6.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[7]]\n[[7]]$f_used\n[1] \"log(total_bacteria_plfa_ng_g) ~ region\"\n\n[[7]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-20-7.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[8]]\n[[8]]$f_used\n[1] \"log(total_fungi_plfa_ng_g) ~ region\"\n\n[[8]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-20-8.png){width=672}\n:::\n:::\n\n\n### Suborder\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap2(\n  .x = dep_vars,\n  .y = log_trans,\n  .f = ~ check_plots_anova(\n    soil_var = .x,\n    log_trans = .y,\n    strat = \"taxsuborder\",\n    df = val_all\n  )\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[[1]]$f_used\n[1] \"corr_percent_stable_gr2mm ~ taxsuborder\"\n\n[[1]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[2]]\n[[2]]$f_used\n[1] \"log(ugC_g_day) ~ taxsuborder\"\n\n[[2]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-21-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[3]]\n[[3]]$f_used\n[1] \"poxc_mg_kg ~ taxsuborder\"\n\n[[3]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-21-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[4]]\n[[4]]$f_used\n[1] \"log(mbc_ug_g_soil) ~ taxsuborder\"\n\n[[4]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-21-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[5]]\n[[5]]$f_used\n[1] \"log(mbn_ug_g_soil) ~ taxsuborder\"\n\n[[5]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-21-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[6]]\n[[6]]$f_used\n[1] \"log(total_living_microbial_biomass_plfa_ng_g) ~ taxsuborder\"\n\n[[6]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-21-6.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[7]]\n[[7]]$f_used\n[1] \"log(total_bacteria_plfa_ng_g) ~ taxsuborder\"\n\n[[7]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-21-7.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n[[8]]\n[[8]]$f_used\n[1] \"log(total_fungi_plfa_ng_g) ~ taxsuborder\"\n\n[[8]]$plots\n```\n:::\n\n::: {.cell-output-display}\n![](30-welch-compare-variation_files/figure-html/unnamed-chunk-21-8.png){width=672}\n:::\n:::\n\n\n## Effect sizes for variance explained\n\n**Add updated references** from reading notes on 2023-03-16 re: calculating effect sizes from F statistics (which is what `{effectsize}` is doing for us behind the scenes when we pass the Welch's ANOVA results to `epsilon_squared()`\n\nI was originally planning on calculating eta-squared as my effect size, using either: [`effectsize::eta_squared()`](https://easystats.github.io/effectsize/reference/eta_squared.html) for ANOVA or [`effectsize::rank_eta_squared()`](https://easystats.github.io/effectsize/reference/rank_epsilon_squared.html)`.` But in reading the [documentation](https://easystats.github.io/effectsize/reference/eta_squared.html) for `eta_squared()` from `{effectsize}`, I learned that there are other, less biased options for calculating this value: omega-squared and epsilon-squared.\n\nI found a very helpful, recent reference, Iacobucci et al., (2023), that explains the differences between eta, epsilon, and omega when used as effect sizes of variance explained.\nSee their paper for the details, but the easiest way to think about it is that using epsilon-squared or omega-squared is essentially like reporting an adjusted R2 value instead of a regular R2 value.\nIt's better to use epsilon squared because the equation accounts for small sample size, which is relevant in our case.\n\nBelow is an example with MBC, this is just me figuring out what the different functions outputs look like, and how NAs are handled.\n\n### Example\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## welch's ANOVA - MBC by soil_group (k-means)\n\ntest_welch <- oneway.test(data = sub_dat,\n            formula = mbc_ug_g_soil ~ soil_group,\n           var.equal = FALSE,\n            na.action = \"na.omit\")\n\ntest_welch\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tOne-way analysis of means (not assuming equal variances)\n\ndata:  mbc_ug_g_soil and soil_group\nF = 5.5237, num df = 4.000, denom df = 22.848, p-value = 0.002911\n```\n:::\n\n```{.r .cell-code}\neffectsize::epsilon_squared(test_welch, partial = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`var.equal = FALSE` - effect size is an approximation.\n```\n:::\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Epsilon2\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_low\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_high\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0.4026246\",\"2\":\"0.95\",\"3\":\"0.0665097\",\"4\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nBelow I test out Welch's ANOVA followed by calculation of epsilon squared.\nThis works, and after reading more from the `{effectsize}` documentation [here](https://easystats.github.io/effectsize/reference/F_to_eta2.html) I think I understand how.\nI can pass the result from `oneway.test(var.equal = FALSE)` to `effectsize::epsilon_squared()` and there is an intermediate step performed where the F statistic from `oneway.test` is converted to the effect size (could be partial eta-squared, omega-squared, or epsilon-squared)\n\n### Setup dataframe\n\nTransformations needed:\n\n-   None: aggregate stability, POXC\n-   Log10: total biomass PLFA, total bacteria PLFA, total fungi PLFA, MBC, MBN, PMC\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstrat_opts <- c(\"soil_group\", \"mlra_short\", \"taxsuborder\",\n                \"taxgrtgroup\")\n\nmod_frame <- tidyr::crossing(dep_vars, strat_opts)\n\n# apply the transformations I decided on above after looking at \n# \"checking distributions\" plots\ndat_trans <- sub_dat %>% \n  mutate(across(.cols = c(total_living_microbial_biomass_plfa_ng_g,\n                          total_bacteria_plfa_ng_g,\n                          total_fungi_plfa_ng_g,\n                          mbc_ug_g_soil,\n                          mbn_ug_g_soil,\n                          ugC_g_day), \n                .fns = log10\n                ))\n# creating a farm dataset so I can compare results \n# for including vs. excluding UD sites\ndat_farm <- dat_trans %>% \n  filter(!str_detect(val_unit_id, \"UD\"))\n```\n:::\n\n\n### Function run ANOVA & calculate epsilon squared\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalc_welch_eps_sq <- function(soil_var,\n                              strat,\n                              df = dat_trans) {\n  \n  my_formula <- as.formula(paste0(soil_var, \" ~ \", strat))\n  \n  \n  mod_obj <- oneway.test(\n    formula = my_formula,\n    data = df,\n    var.equal = FALSE,\n    na.action = \"na.omit\"\n  )\n\n    eps_sq <- effectsize::epsilon_squared(model = mod_obj,\n                        # partial FALSE b/c one-way test\n                        # we don't have other vars to\n                        # break the variance down by\n                        partial = FALSE)\n\n  return(eps_sq)\n\n}\n```\n:::\n\n\n### Calculate epsilon squared\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# quieted the message \"`var.equal = FALSE` - effect size is an approximation.\", it's a reminder that this effect size is an apporximation because we are estimating it based on the f statistic from our Welch's ANOVA\n\neps_inputs <- mod_frame %>% \n  rename(strat = strat_opts, \n         soil_var = dep_vars) %>% \n  select(soil_var, strat) \n\n# returns bunch of reminders about how the eff size is \n# an approximation (b/c we are calculating it from F stat,\n# not directly from SS)\neps_results <- eps_inputs %>%\n  mutate(eps_results = map2(\n    .x = soil_var,\n    .y = strat,\n    .f = ~ calc_welch_eps_sq(\n      soil_var = .x,\n      strat = .y,\n      df = dat_trans\n    )\n  ))\n\n\neps_farm <- eps_inputs %>%\n  mutate(eps_results = map2(\n    .x = soil_var,\n    .y = strat,\n    .f = ~ calc_welch_eps_sq(\n      soil_var = .x,\n      strat = .y,\n      df = dat_farm\n    )\n  ))\n```\n:::\n\n\n### Clean up data\n\n\n::: {.cell}\n\n```{.r .cell-code}\neps_long <- eps_results %>% \n  unnest(eps_results) %>% \n  rename(epsilon_sq = Epsilon2)\n\nfarm_long <- eps_farm %>% \n  unnest(eps_results) %>% \n  rename(epsilon_sq = Epsilon2)\n\n# eps_wide <- eps_long %>% \n#   pivot_wider(values_from = c(\"epsilon_sq\", \"type\"), \n#               names_from = \"strat\")\n```\n:::\n\n\n### Table of variance explained\n\n\n::: {.cell}\n\n```{.r .cell-code}\neps_long %>% \n  filter(strat != \"taxgrtgroup\") %>% \n  mutate(soil_var = case_when(\n    str_detect(soil_var, \"stable\") ~ \"Agg Stab\",\n    str_detect(soil_var, \"mbc\") ~ \"MBC\",\n    str_detect(soil_var, \"mbn\") ~ \"MBN\",\n    str_detect(soil_var, \"poxc\") ~ \"POXC\",\n    str_detect(soil_var, \"total_bact\") ~ \"Bact PLFA\",\n    str_detect(soil_var, \"total_fungi\") ~ \"Fungi PLFA\",\n    str_detect(soil_var, \"total_living\") ~ \"Total PLFA\",\n    str_detect(soil_var, \"ugC\") ~ \"PMC\",\n  )) %>% \n  select(soil_var, strat, epsilon_sq) %>% \n  pivot_wider(names_from = \"strat\",\n              values_from = \"epsilon_sq\") %>% \n  mutate(across(where(is.numeric), ~round(.x, digits = 2)))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"soil_var\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mlra_short\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"soil_group\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"taxsuborder\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Agg Stab\",\"2\":\"0.35\",\"3\":\"0.10\",\"4\":\"0.03\"},{\"1\":\"MBC\",\"2\":\"0.47\",\"3\":\"0.47\",\"4\":\"0.40\"},{\"1\":\"MBN\",\"2\":\"0.63\",\"3\":\"0.49\",\"4\":\"0.54\"},{\"1\":\"POXC\",\"2\":\"0.34\",\"3\":\"0.60\",\"4\":\"0.46\"},{\"1\":\"Bact PLFA\",\"2\":\"0.52\",\"3\":\"0.52\",\"4\":\"0.22\"},{\"1\":\"Fungi PLFA\",\"2\":\"0.51\",\"3\":\"0.26\",\"4\":\"0.25\"},{\"1\":\"Total PLFA\",\"2\":\"0.47\",\"3\":\"0.50\",\"4\":\"0.25\"},{\"1\":\"PMC\",\"2\":\"0.00\",\"3\":\"0.00\",\"4\":\"0.00\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Plots of variance explained\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_pts_labelled <- eps_long %>% \n  filter(strat != \"taxgrtgroup\") %>% \n  mutate(soil_var = case_when(\n    soil_var == \"mbc_ug_g_soil\" ~ \"MBC\",\n    soil_var == \"mbn_ug_g_soil\" ~ \"MBN\", \n    soil_var == \"corr_percent_stable_gr2mm\" ~ \"Aggregate Stab.\",\n    soil_var == \"poxc_mg_kg\" ~ \"POXC\", \n    soil_var == \"total_bacteria_plfa_ng_g\" ~ \"Bacteria PLFA\",\n    soil_var == \"total_fungi_plfa_ng_g\" ~ \"Fungi PLFA\",\n    soil_var == \"total_living_microbial_biomass_plfa_ng_g\" ~ \"Total Biomass PLFA\", \n    soil_var == \"poxc_mg_kg\" ~ \"POXC\",\n    soil_var == \"ugC_g_day\" ~ \"PMC\"\n  ),\n  strat = case_when(\n    strat == \"mlra_short\" ~ \"MLRA\",\n    strat == \"soil_group\" ~ \"KM CLUSTER\",\n    strat == \"taxsuborder\" ~ \"SUBORDER\"\n  )) %>%\n  group_by(soil_var) %>%\n  mutate(max_epsilon = max(epsilon_sq),\n         top_strat = case_when(\n           epsilon_sq == max_epsilon ~ \"Y\",\n           TRUE ~ \"N\"\n         ), \n  # round for nice labels \n         epsilon_sq_lab = round(epsilon_sq, digits = 2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# saving in case I want to compare farm (no UD) vs. w/ UD results\n\nfarm_labelled <- farm_long %>%\n  filter(strat != \"taxgrtgroup\") %>%\n  mutate(soil_var = case_when(\n    soil_var == \"mbc_ug_g_soil\" ~ \"MBC\",\n    soil_var == \"mbn_ug_g_soil\" ~ \"MBN\",\n    soil_var == \"corr_percent_stable_gr2mm\" ~ \"Aggregate Stab.\",\n    soil_var == \"poxc_mg_kg\" ~ \"POXC\",\n    soil_var == \"total_bacteria_plfa_ng_g\" ~ \"Bacteria PLFA\",\n    soil_var == \"total_fungi_plfa_ng_g\" ~ \"Fungi PLFA\",\n    soil_var == \"total_living_microbial_biomass_plfa_ng_g\" ~ \"Total Biomass PLFA\",\n    soil_var == \"poxc_mg_kg\" ~ \"POXC\",\n    soil_var == \"ugC_g_day\" ~ \"PMC\"\n  ),\n  strat = case_when(\n    strat == \"mlra_short\" ~ \"MLRA\",\n    strat == \"soil_group\" ~ \"KM CLUSTER\",\n    strat == \"taxsuborder\" ~ \"SUBORDER\"\n  )) %>%\n  group_by(soil_var) %>%\n  mutate(max_epsilon = max(epsilon_sq),\n         top_strat = case_when(\n           epsilon_sq == max_epsilon ~ \"Y\",\n           TRUE ~ \"N\"\n         ), \n  # round for nice labels \n         epsilon_sq_lab = round(epsilon_sq, digits = 2))\n```\n:::\n\n\n## (with UD) variance explained plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_var_order <-\n  c(\n    \"POXC\",\n  #  \"Total Biomass PLFA\",\n    \"Bacteria PLFA\",\n    \"MBC\",\n    \"MBN\",\n    \"Fungi PLFA\",\n    \"Aggregate Stab.\",\n    \"PMC\"\n  )\n\n\neps_bar_plot <- all_pts_labelled %>%\n  filter(soil_var != \"Total Biomass PLFA\") %>% \n  ggplot() +\n  geom_col(aes(x = soil_var, y = epsilon_sq_lab, fill = strat),\n           position = position_dodge(),\n           width = 0.7, \n           color = \"black\") +\n  # geom_text(aes(x = 8.25, y = 0.85, label = \"A.\"), size = 3) +\n  #   geom_text(aes(x = 6.25, y = 0.85, label = \"B.\"), size = 3) +\n  #   geom_text(aes(x = 4.25, y = 0.85, label = \"C.\"), size = 3) +\n  #   geom_text(aes(x = 1.25, y = 0.85, label = \"D.\"), size = 3) +\n  scale_x_discrete(limits = rev(plot_var_order)) +\n  scale_y_continuous(breaks = seq(0, 0.7, 0.1), limits = c(0, 0.7)) +\n#   geom_vline(aes(xintercept = 1.5)) +\n#   geom_vline(aes(xintercept = 4.5)) +\n#   geom_vline(aes(xintercept = 6.5)) +\n  coord_cartesian(xlim = c(0, 0.7),\n                  clip = 'off') +\n  coord_flip() +\n  theme_bw() +\n  theme(\n    legend.position = \"bottom\",\n    plot.title = element_text(hjust = 1),\n    legend.text = element_text(size = 8),\n    legend.justification = c(1, 1)\n  ) +\n  xlab(\"\") +\n  ylab(\"Epsilon Squared\") +\n  #labs(caption = \"With undisturbed (Welch's ANOVA)\") +\n  scale_fill_manual(values = c(\"#1b9e77\", \"#d95f02\", \"#7570b3\")) +\n  guides(fill = guide_legend(title = \"Grouping Method\")) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n```\n:::\n\n```{.r .cell-code}\nggsave(\"figs/epsilon_sq_barplot_ud.png\", plot = eps_bar_plot, \n       width = 5, height = 5, units = \"in\")\n```\n:::\n\n\n## (No UD) variance explained table & plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarm_long %>% \n  filter(strat != \"taxgrtgroup\") %>% \n  mutate(soil_var = case_when(\n    str_detect(soil_var, \"stable\") ~ \"Agg Stab\",\n    str_detect(soil_var, \"mbc\") ~ \"MBC\",\n    str_detect(soil_var, \"mbn\") ~ \"MBN\",\n    str_detect(soil_var, \"poxc\") ~ \"POXC\",\n    str_detect(soil_var, \"total_bact\") ~ \"Bact PLFA\",\n    str_detect(soil_var, \"total_fungi\") ~ \"Fungi PLFA\",\n    str_detect(soil_var, \"total_living\") ~ \"Total PLFA\",\n    str_detect(soil_var, \"ugC\") ~ \"PMC\",\n  )) %>% \n  select(soil_var, strat, epsilon_sq) %>% \n  pivot_wider(names_from = \"strat\",\n              values_from = \"epsilon_sq\") %>% \n  mutate(across(where(is.numeric), ~round(.x, digits = 2)))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"soil_var\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"mlra_short\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"soil_group\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"taxsuborder\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Agg Stab\",\"2\":\"0.52\",\"3\":\"0.52\",\"4\":\"0.38\"},{\"1\":\"MBC\",\"2\":\"0.83\",\"3\":\"0.82\",\"4\":\"0.69\"},{\"1\":\"MBN\",\"2\":\"0.83\",\"3\":\"0.73\",\"4\":\"0.76\"},{\"1\":\"POXC\",\"2\":\"0.61\",\"3\":\"0.75\",\"4\":\"0.71\"},{\"1\":\"Bact PLFA\",\"2\":\"0.78\",\"3\":\"0.78\",\"4\":\"0.53\"},{\"1\":\"Fungi PLFA\",\"2\":\"0.70\",\"3\":\"0.35\",\"4\":\"0.41\"},{\"1\":\"Total PLFA\",\"2\":\"0.77\",\"3\":\"0.79\",\"4\":\"0.54\"},{\"1\":\"PMC\",\"2\":\"0.71\",\"3\":\"0.62\",\"4\":\"0.72\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# decided to use the same order as the above plot that also includes the UD data, to make comparison between them easier\n\n# f_plot_var_order <- c(\"POXC\", \"Total Biomass PLFA\",\"Aggregate Stab.\", \"Bacteria PLFA\", \"MBC\", \"MBN\", \"Fungi PLFA\", \"PMC\")\n\n\nfarm_bar_plot <- farm_labelled %>%\n  filter(soil_var != \"Total Biomass PLFA\") %>% \n  ggplot() +\n  geom_col(aes(x = soil_var, y = epsilon_sq_lab, fill = strat),\n           position = position_dodge(),\n           width = 0.7,\n           color = \"black\") +\n  # geom_text(aes(x = 1, y = 0.9, label = \"D.\"), size = 3) +\n  # geom_text(aes(x = 3, y = 0.9, label = \"C.\"), size = 3) +\n  # geom_text(aes(x = 7.5, y = 0.9, label = \"A.\"), size = 3) +\n  #   geom_text(aes(x = 5.5, y = 0.9, label = \"B.\"), size = 3) +\n  scale_x_discrete(limits = rev(plot_var_order)) + \n  scale_y_continuous(breaks = seq(0, 1, 0.1), limits = c(0, 1.05)) +\n # geom_vline(aes(xintercept = 1.5)) +\n #  geom_vline(aes(xintercept = 4.5)) +\n #  geom_vline(aes(xintercept = 6.5)) +\n  coord_flip() +\n  theme_bw() +\ntheme(\n    legend.position = \"bottom\",\n    plot.title = element_text(hjust = 1),\n    legend.text = element_text(size = 8),\n    legend.justification = c(1, 1)\n  ) +\n  xlab(\"\") +\n  ylab(\"Epsilon Squared\") +\n  # labs(caption = \"Just farm data/no undisturbed (Welch's ANOVA)\") +\n  scale_fill_manual(values = c(\"#1b9e77\", \"#d95f02\", \"#7570b3\")) +\n  guides(fill = guide_legend(title = \"Grouping Method\"))\n\nggsave(\n  \"figs/epsilon_sq_barplot_farms.png\",\n  plot = farm_bar_plot,\n  width = 5,\n  height = 5,\n  units = \"in\"\n)\n```\n:::\n\n\n## What is going on with PMC?\n\nPMC returns 0% variance explained for all three stratification options: K-means, Region, and Taxonomic sub-group.\nIs this really correct?\nLet's double check below with the region stratification to make sure there isn't something weird with the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_pmc <- lm(ugC_g_day ~ region, data = sub_dat, na.action = \"na.omit\")\n\naov_pmc <- car::Anova(lm_pmc, type = 2)\n\n# big residuals number... that explains it\naov_pmc\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Sum Sq\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Df\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"F value\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pr(>F)\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"5596.696\",\"2\":\"3\",\"3\":\"0.811474\",\"4\":\"0.4914811\",\"_rn_\":\"region\"},{\"1\":\"172423.751\",\"2\":\"75\",\"3\":\"NA\",\"4\":\"NA\",\"_rn_\":\"Residuals\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\neffectsize::epsilon_squared(aov_pmc, partial = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Parameter\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Epsilon2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_low\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_high\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"region\",\"2\":\"0\",\"3\":\"0.95\",\"4\":\"0\",\"5\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# what about eta-squared?\neffectsize::eta_squared(aov_pmc, partial = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Parameter\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Eta2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_low\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_high\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"region\",\"2\":\"0.0314385\",\"3\":\"0.95\",\"4\":\"0\",\"5\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# what if we drop the UD sites?\n\nfarmdat <- sub_dat %>% filter(!str_detect(val_unit_id, \"UD\"))\n\nlm_farm <- lm(ugC_g_day ~ region, data = farmdat, na.action = \"na.omit\")\n\naov_farm <- car::Anova(lm_farm, type = 2)\n\n# big residuals number... that explains it\naov_farm\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Sum Sq\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Df\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"F value\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Pr(>F)\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2912.534\",\"2\":\"3\",\"3\":\"4.96914\",\"4\":\"0.004016216\",\"_rn_\":\"region\"},{\"1\":\"10745.615\",\"2\":\"55\",\"3\":\"NA\",\"4\":\"NA\",\"_rn_\":\"Residuals\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\neffectsize::epsilon_squared(aov_farm, partial = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Parameter\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Epsilon2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_low\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_high\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"region\",\"2\":\"0.1703313\",\"3\":\"0.95\",\"4\":\"0.0209398\",\"5\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# what about eta-squared?\neffectsize::eta_squared(aov_farm, partial = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Parameter\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Eta2\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_low\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"CI_high\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"region\",\"2\":\"0.2132452\",\"3\":\"0.95\",\"4\":\"0.04924279\",\"5\":\"1\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## ANOVA models POXC\n\nTrying this after reading Mourtzinis et al., 2020 about stratifying producer fields to better explain soybean yield variability\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# using poxc as example \n# check for missing values\nnrow(sub_dat %>% filter(is.na(poxc_mg_kg)))\n\n# summarise to mapunit level (val_unit_ids)\npoxc_test <- sub_dat %>% \n  filter(!is.na(poxc_mg_kg)) %>% \n  group_by(val_unit_id, region, k_8) %>% \n  summarise(mean_poxc = mean(poxc_mg_kg),\n            .groups = \"drop\") %>% \n  mutate(k_8 = glue(\"cl_{k_8}\"))\n\nreglm <- lm(mean_poxc ~ region, data = poxc_test)\n#regposlm <- lm(mean_poxc ~ region*position, data = poxc_test)\nclustlm <- lm(mean_poxc ~ k_8, data = poxc_test)\n\nperformance::check_model(reglm, check = c(\"normality\", \"linearity\", \"homogeneity\", \"outliers\"))\n\nanova_reg <- car::Anova(reglm) %>% broom::tidy() %>% column_to_rownames(\"term\")\n\n# anova_regpos <- car::Anova(regposlm) %>% broom::tidy() %>% column_to_rownames(\"term\")\n  \nanova_clust <- car::Anova(clustlm) %>% broom::tidy() %>% \n  column_to_rownames(\"term\")\n\n# what percentage of variation is explained by the \"region\" term\n# vs. the \"cluster\" term vs. the region and cluster terms (and their interaction?)\n\nss_reg <- anova_reg['region', 'sumsq']/sum(anova_reg['sumsq'])*100\n\n# ss_regpos <- (anova_regpos['region', 'sumsq'] + \n#     anova_regpos['position', 'sumsq'] + \n#     anova_regpos['region:position', 'sumsq'] ) /sum(anova_reg['sumsq'])*100\n\nss_clust <- anova_clust['k_8', 'sumsq']/sum(anova_clust['sumsq'])*100\n\n\nss_reg\nss_regpos\nss_clust\n```\n:::\n\n\n## ANOVA models MBC\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# using poxc as example \n# check for missing values\nnrow(sub_dat %>% filter(is.na(mbc_ug_g_soil)))\n\nmbc_test <- sub_dat %>% \n  filter(!is.na(mbc_ug_g_soil)) %>% \n  group_by(val_unit_id, region, k_8, position) %>% \n  summarise(mean_mbc = mean(mbc_ug_g_soil),\n            .groups = \"drop\") %>% \n  mutate(k_8 = glue(\"cl_{k_8}\"))\n\nreglm <- lm(mean_mbc ~ region, data = mbc_test)\nregposlm <- lm(mean_mbc ~ region*position, data = mbc_test)\nclustlm <- lm(mean_mbc ~ k_8, data = mbc_test)\n\nanova_reg <- car::Anova(reglm) %>% broom::tidy() %>% column_to_rownames(\"term\")\n\nanova_regpos <- car::Anova(regposlm) %>% broom::tidy() %>% column_to_rownames(\"term\")\n  \nanova_clust <- car::Anova(clustlm) %>% broom::tidy() %>% \n  column_to_rownames(\"term\")\n\n# what percentage of variation is explained by the \"region\" term\n# vs. the \"cluster\" term vs. the region and cluster terms (and their interaction?)\n\nss_reg <- anova_reg['region', 'sumsq']/sum(anova_reg['sumsq'])*100\n\nss_regpos <- (anova_regpos['region', 'sumsq'] + \n    anova_regpos['position', 'sumsq'] + \n    anova_regpos['region:position', 'sumsq'] ) /sum(anova_reg['sumsq'])*100\n\nss_clust <- anova_clust['k_8', 'sumsq']/sum(anova_clust['sumsq'])*100\n\n\nss_reg\nss_regpos\nss_clust\n```\n:::\n\n\n## (Old) Calculate coefficient of variation\n\nOld stuff here but wanted to keep track of the cvequality package link in case it's useful at some other point...\nMy idea was to use coefficient of variation (%) to compare the spread of the points when grouped by geographic region vs. soil group.\nI found a helpful R package to do this (which includes stats citations): [`{cvequality}`](https://cran.r-project.org/web/packages/cvequality/vignettes/how_to_test_CVs.html)\n",
    "supporting": [
      "30-welch-compare-variation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}